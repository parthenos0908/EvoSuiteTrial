/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 02:59:53 GMT 2021
 */

package com.iluwatar.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.bytecode.Wizard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Wizard_ESTest extends Wizard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setWisdom((-1));
      int int0 = wizard0.getWisdom();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setHealth((-4939));
      int int0 = wizard0.getHealth();
      assertEquals((-4939), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setAgility(697);
      int int0 = wizard0.getAgility();
      assertEquals(697, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setAgility((-857));
      int int0 = wizard0.getAgility();
      assertEquals((-857), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setHealth(1);
      int int0 = wizard0.getHealth();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      int int0 = wizard0.getAgility();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      int int0 = wizard0.getNumberOfPlayedSounds();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.spawnParticles();
      int int0 = wizard0.getNumberOfSpawnedParticles();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.playSound();
      int int0 = wizard0.getNumberOfPlayedSounds();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setWisdom(1);
      int int0 = wizard0.getWisdom();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      int int0 = wizard0.getNumberOfSpawnedParticles();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      int int0 = wizard0.getWisdom();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      int int0 = wizard0.getHealth();
      assertEquals(0, int0);
  }
}
