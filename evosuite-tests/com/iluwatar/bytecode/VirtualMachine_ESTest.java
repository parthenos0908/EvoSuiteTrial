/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 02:58:44 GMT 2021
 */

package com.iluwatar.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.bytecode.VirtualMachine;
import com.iluwatar.bytecode.Wizard;
import java.util.EmptyStackException;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VirtualMachine_ESTest extends VirtualMachine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[4] = 2;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid instruction value
         //
         verifyException("com.iluwatar.bytecode.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[2] = 11;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[2] = 10;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[2] = 3;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[2] = 4;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int int0 = virtualMachine0.getHealth(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      virtualMachine0.setHealth(0, 1);
      int int0 = virtualMachine0.getHealth(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      virtualMachine0.setHealth(0, (-10));
      int int0 = virtualMachine0.getHealth(0);
      assertEquals((-10), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int int0 = virtualMachine0.getAgility(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      virtualMachine0.setAgility(1, 1);
      int int0 = virtualMachine0.getAgility(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.setWisdom((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.setHealth(791, 791);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 791 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.setAgility((-1735), (-1735));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1735 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.getWisdom(4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.execute((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read the array length because \"bytecode\" is null
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.getHealth((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      // Undeclared exception!
      try { 
        virtualMachine0.getAgility(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 2
         //
         verifyException("com.iluwatar.bytecode.VirtualMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int int0 = virtualMachine0.getWisdom(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[2] = 6;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid instruction value
         //
         verifyException("com.iluwatar.bytecode.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[2] = 5;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid instruction value
         //
         verifyException("com.iluwatar.bytecode.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      virtualMachine0.setAgility(1, (-455));
      int int0 = virtualMachine0.getAgility(1);
      assertEquals((-455), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      virtualMachine0.setWisdom(0, (-2192));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      Wizard[] wizardArray0 = virtualMachine0.getWizards();
      assertEquals(2, wizardArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      Stack<Integer> stack0 = virtualMachine0.getStack();
      assertEquals(0, stack0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[2] = 7;
      // Undeclared exception!
      try { 
        virtualMachine0.execute(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid instruction value
         //
         verifyException("com.iluwatar.bytecode.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VirtualMachine virtualMachine0 = new VirtualMachine();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[2] = 8;
      intArray0[3] = 8;
      intArray0[4] = 9;
      virtualMachine0.execute(intArray0);
      Stack<Integer> stack0 = virtualMachine0.getStack();
      assertEquals("[0]", stack0.toString());
  }
}
