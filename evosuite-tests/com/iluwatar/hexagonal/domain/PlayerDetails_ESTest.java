/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:15:46 GMT 2021
 */

package com.iluwatar.hexagonal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.hexagonal.domain.PlayerDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PlayerDetails_ESTest extends PlayerDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("rS7%`` 5", "v5@i.STL-", "U?");
      playerDetails0.hashCode();
      assertEquals("PlayerDetails{emailAddress='rS7%`` 5', bankAccountNumber='v5@i.STL-', phoneNumber='U?'}", playerDetails0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      String string0 = playerDetails0.getPhoneNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("rS7%`` 5", "v5@i.STL-", "U?");
      playerDetails0.getPhoneNumber();
      assertEquals("PlayerDetails{emailAddress='rS7%`` 5', bankAccountNumber='v5@i.STL-', phoneNumber='U?'}", playerDetails0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      String string0 = playerDetails0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("PlayerDetails{emailAddress='', bankAccountNumber='', phoneNumber=''}", "", "");
      playerDetails0.getEmail();
      assertEquals("PlayerDetails{emailAddress='PlayerDetails{emailAddress='', bankAccountNumber='', phoneNumber=''}', bankAccountNumber='', phoneNumber=''}", playerDetails0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      String string0 = playerDetails0.getBankAccount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "n4v{$W+wJspX:7", "~w,C|)T jV5??9BhK");
      playerDetails0.getBankAccount();
      assertEquals("PlayerDetails{emailAddress='', bankAccountNumber='n4v{$W+wJspX:7', phoneNumber='~w,C|)T jV5??9BhK'}", playerDetails0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("6", (String) null, (String) null);
      PlayerDetails playerDetails1 = new PlayerDetails("6", (String) null, "6");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertFalse(boolean0);
      assertEquals("PlayerDetails{emailAddress='6', bankAccountNumber='null', phoneNumber='null'}", playerDetails0.toString());
      assertEquals("PlayerDetails{emailAddress='6', bankAccountNumber='null', phoneNumber='6'}", playerDetails1.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      PlayerDetails playerDetails1 = new PlayerDetails("PlayerDetails{emailAddress='', bankAccountNumber='', phoneNumber=''}", "", "");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertEquals("PlayerDetails{emailAddress='PlayerDetails{emailAddress='', bankAccountNumber='', phoneNumber=''}', bankAccountNumber='', phoneNumber=''}", playerDetails1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, "n4v{$W+wJspX:7", "");
      PlayerDetails playerDetails1 = new PlayerDetails("PlayerDetails{emailAddress='', bankAccountNumber='SDf{+~,e\"f ', phoneNumber='SDf{+~,e\"f '}", "n4v{$W+wJspX:7", "");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertFalse(boolean0);
      assertEquals("PlayerDetails{emailAddress='PlayerDetails{emailAddress='', bankAccountNumber='SDf{+~,e\"f ', phoneNumber='SDf{+~,e\"f '}', bankAccountNumber='n4v{$W+wJspX:7', phoneNumber=''}", playerDetails1.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("v5@i.STL-", "", "");
      PlayerDetails playerDetails1 = new PlayerDetails("rS7%`` 5", "v5@i.STL-", "U?");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertEquals("PlayerDetails{emailAddress='rS7%`` 5', bankAccountNumber='v5@i.STL-', phoneNumber='U?'}", playerDetails1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      PlayerDetails playerDetails1 = new PlayerDetails("", "PlayerDetails{emailAddress='null', bankAccountNumber='null', phoneNumber='null'}", "UG");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertEquals("PlayerDetails{emailAddress='', bankAccountNumber='PlayerDetails{emailAddress='null', bankAccountNumber='null', phoneNumber='null'}', phoneNumber='UG'}", playerDetails1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      PlayerDetails playerDetails1 = new PlayerDetails((String) null, (String) null, (String) null);
      boolean boolean0 = playerDetails1.equals(playerDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      PlayerDetails playerDetails1 = new PlayerDetails("", "", "");
      boolean boolean0 = playerDetails0.equals(playerDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      boolean boolean0 = playerDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails(":", ":", ":");
      boolean boolean0 = playerDetails0.equals(playerDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      boolean boolean0 = playerDetails0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, (String) null, (String) null);
      playerDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      String string0 = playerDetails0.getPhoneNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      String string0 = playerDetails0.toString();
      assertEquals("PlayerDetails{emailAddress='', bankAccountNumber='', phoneNumber=''}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      String string0 = playerDetails0.getBankAccount();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      String string0 = playerDetails0.getEmail();
      assertEquals("", string0);
  }
}
