/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:10:05 GMT 2021
 */

package com.iluwatar.hexagonal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.hexagonal.banking.InMemoryBank;
import com.iluwatar.hexagonal.database.InMemoryTicketRepository;
import com.iluwatar.hexagonal.database.LotteryTicketRepository;
import com.iluwatar.hexagonal.domain.LotteryNumbers;
import com.iluwatar.hexagonal.domain.LotteryService;
import com.iluwatar.hexagonal.domain.LotteryTicket;
import com.iluwatar.hexagonal.domain.LotteryTicketCheckResult;
import com.iluwatar.hexagonal.domain.LotteryTicketId;
import com.iluwatar.hexagonal.domain.PlayerDetails;
import com.iluwatar.hexagonal.eventlog.LotteryEventLog;
import com.iluwatar.hexagonal.eventlog.StdOutEventLog;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LotteryService_ESTest extends LotteryService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryService lotteryService0 = new LotteryService(inMemoryTicketRepository0, stdOutEventLog0, inMemoryBank0);
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      PlayerDetails playerDetails0 = new PlayerDetails((String) null, "Lv2}", "Lv2}");
      LotteryTicket lotteryTicket0 = new LotteryTicket(lotteryTicketId0, playerDetails0, (LotteryNumbers) null);
      lotteryService0.submitTicket(lotteryTicket0);
      //  // Unstable assertion: assertEquals(23, lotteryTicketId0.getId());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryService lotteryService0 = new LotteryService((LotteryTicketRepository) null, stdOutEventLog0, inMemoryBank0);
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId((-1));
      // Undeclared exception!
      try { 
        lotteryService0.checkTicketForPrize(lotteryTicketId0, (LotteryNumbers) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.hexagonal.database.LotteryTicketRepository.findById(com.iluwatar.hexagonal.domain.LotteryTicketId)\" because \"repository\" is null
         //
         verifyException("com.iluwatar.hexagonal.domain.LotteryUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      PlayerDetails playerDetails0 = new PlayerDetails("", "", "");
      LotteryTicket lotteryTicket0 = new LotteryTicket(lotteryTicketId0, playerDetails0, (LotteryNumbers) null);
      LotteryService lotteryService0 = new LotteryService(inMemoryTicketRepository0, (LotteryEventLog) null, inMemoryBank0);
      // Undeclared exception!
      try { 
        lotteryService0.submitTicket(lotteryTicket0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.hexagonal.eventlog.LotteryEventLog.ticketSubmitError(com.iluwatar.hexagonal.domain.PlayerDetails)\" because \"this.notifications\" is null
         //
         verifyException("com.iluwatar.hexagonal.domain.LotteryService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      PlayerDetails playerDetails0 = new PlayerDetails("123-123", "123-123", "");
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId(82);
      LotteryTicket lotteryTicket0 = new LotteryTicket(lotteryTicketId0, playerDetails0, (LotteryNumbers) null);
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryService lotteryService0 = new LotteryService(inMemoryTicketRepository0, stdOutEventLog0, inMemoryBank0);
      Optional<LotteryTicketId> optional0 = lotteryService0.submitTicket(lotteryTicket0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId(82);
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryService lotteryService0 = new LotteryService(inMemoryTicketRepository0, stdOutEventLog0, inMemoryBank0);
      LotteryTicketCheckResult lotteryTicketCheckResult0 = lotteryService0.checkTicketForPrize(lotteryTicketId0, (LotteryNumbers) null);
      assertEquals(LotteryTicketCheckResult.CheckResult.TICKET_NOT_SUBMITTED, lotteryTicketCheckResult0.getResult());
  }
}
