/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:06:43 GMT 2021
 */

package com.iluwatar.hexagonal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.hexagonal.banking.InMemoryBank;
import com.iluwatar.hexagonal.banking.WireTransfers;
import com.iluwatar.hexagonal.database.InMemoryTicketRepository;
import com.iluwatar.hexagonal.database.LotteryTicketRepository;
import com.iluwatar.hexagonal.domain.LotteryAdministration;
import com.iluwatar.hexagonal.domain.LotteryTicket;
import com.iluwatar.hexagonal.domain.LotteryTicketId;
import com.iluwatar.hexagonal.eventlog.LotteryEventLog;
import com.iluwatar.hexagonal.eventlog.StdOutEventLog;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LotteryAdministration_ESTest extends LotteryAdministration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryAdministration lotteryAdministration0 = new LotteryAdministration((LotteryTicketRepository) null, stdOutEventLog0, inMemoryBank0);
      // Undeclared exception!
      try { 
        lotteryAdministration0.resetLottery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.hexagonal.database.LotteryTicketRepository.deleteAll()\" because \"this.repository\" is null
         //
         verifyException("com.iluwatar.hexagonal.domain.LotteryAdministration", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryAdministration lotteryAdministration0 = new LotteryAdministration(inMemoryTicketRepository0, stdOutEventLog0, inMemoryBank0);
      // Undeclared exception!
      lotteryAdministration0.performLottery();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      LotteryAdministration lotteryAdministration0 = new LotteryAdministration((LotteryTicketRepository) null, stdOutEventLog0, (WireTransfers) null);
      // Undeclared exception!
      try { 
        lotteryAdministration0.getAllSubmittedTickets();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.hexagonal.database.LotteryTicketRepository.findAll()\" because \"this.repository\" is null
         //
         verifyException("com.iluwatar.hexagonal.domain.LotteryAdministration", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      LotteryAdministration lotteryAdministration0 = new LotteryAdministration(inMemoryTicketRepository0, (LotteryEventLog) null, inMemoryBank0);
      lotteryAdministration0.resetLottery();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InMemoryTicketRepository inMemoryTicketRepository0 = new InMemoryTicketRepository();
      InMemoryBank inMemoryBank0 = new InMemoryBank();
      StdOutEventLog stdOutEventLog0 = new StdOutEventLog();
      LotteryAdministration lotteryAdministration0 = new LotteryAdministration(inMemoryTicketRepository0, stdOutEventLog0, inMemoryBank0);
      Map<LotteryTicketId, LotteryTicket> map0 = lotteryAdministration0.getAllSubmittedTickets();
      assertTrue(map0.isEmpty());
  }
}
