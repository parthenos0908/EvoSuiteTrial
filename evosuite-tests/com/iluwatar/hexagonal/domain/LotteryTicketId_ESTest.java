/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:13:31 GMT 2021
 */

package com.iluwatar.hexagonal.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.hexagonal.domain.LotteryTicketId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LotteryTicketId_ESTest extends LotteryTicketId_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      LotteryTicketId lotteryTicketId1 = new LotteryTicketId(2298);
      boolean boolean0 = lotteryTicketId0.equals(lotteryTicketId1);
      //  // Unstable assertion: assertEquals(54, lotteryTicketId0.getId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId(0);
      int int0 = lotteryTicketId0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId((-1094));
      int int0 = lotteryTicketId0.getId();
      assertEquals((-1094), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId(0);
      LotteryTicketId lotteryTicketId1 = new LotteryTicketId(0);
      boolean boolean0 = lotteryTicketId0.equals(lotteryTicketId1);
      assertTrue(boolean0);
      assertEquals(0, lotteryTicketId1.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      LotteryTicketId lotteryTicketId1 = new LotteryTicketId();
      boolean boolean0 = lotteryTicketId0.equals(lotteryTicketId1);
      //  // Unstable assertion: assertEquals(29, lotteryTicketId1.getId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      boolean boolean0 = lotteryTicketId0.equals((Object) null);
      //  // Unstable assertion: assertEquals(24, lotteryTicketId0.getId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      boolean boolean0 = lotteryTicketId0.equals(lotteryTicketId0);
      //  // Unstable assertion: assertEquals(21, lotteryTicketId0.getId());
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      boolean boolean0 = lotteryTicketId0.equals("141701");
      //  // Unstable assertion: assertEquals(16, lotteryTicketId0.getId());
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      lotteryTicketId0.hashCode();
      //  // Unstable assertion: assertEquals(12, lotteryTicketId0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      int int0 = lotteryTicketId0.getId();
      //  // Unstable assertion: assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LotteryTicketId lotteryTicketId0 = new LotteryTicketId();
      lotteryTicketId0.toString();
      assertEquals(1, lotteryTicketId0.getId());
  }
}
