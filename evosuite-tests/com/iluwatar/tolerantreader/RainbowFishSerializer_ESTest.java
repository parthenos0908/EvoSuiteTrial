/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:44:02 GMT 2021
 */

package com.iluwatar.tolerantreader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.tolerantreader.RainbowFish;
import com.iluwatar.tolerantreader.RainbowFishSerializer;
import com.iluwatar.tolerantreader.RainbowFishV2;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.StreamCorruptedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RainbowFishSerializer_ESTest extends RainbowFishSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("q", (-1847), 1487, 1487);
      RainbowFishSerializer.writeV1(rainbowFishV2_0, "q");
      RainbowFish rainbowFish0 = RainbowFishSerializer.readV1("q");
      assertEquals(1487, rainbowFish0.getWeightTons());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("com.iluwatar.tolerantreader.RainbowFishV2", 1, (-2292), (-1522), false, false, false);
      RainbowFishSerializer.writeV2(rainbowFishV2_0, "b:");
      RainbowFish rainbowFish0 = RainbowFishSerializer.readV1("b:");
      assertEquals((-1522), rainbowFish0.getWeightTons());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("E.%oBvC", (-1), 0, (-1));
      RainbowFishSerializer.writeV1(rainbowFishV2_0, "E.%oBvC");
      RainbowFish rainbowFish0 = RainbowFishSerializer.readV1("E.%oBvC");
      assertEquals((-1), rainbowFish0.getAge());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        RainbowFishSerializer.writeV2((RainbowFishV2) null, "VDk$>m;{@G&9e");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.tolerantreader.RainbowFishV2.getName()\" because \"rainbowFish\" is null
         //
         verifyException("com.iluwatar.tolerantreader.RainbowFishSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("", 2482, 2482, 2482);
      try { 
        RainbowFishSerializer.writeV2(rainbowFishV2_0, "mW>J");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("", 50, 50, 50);
      try { 
        RainbowFishSerializer.writeV2(rainbowFishV2_0, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        RainbowFishSerializer.writeV1((RainbowFish) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.tolerantreader.RainbowFish.getName()\" because \"rainbowFish\" is null
         //
         verifyException("com.iluwatar.tolerantreader.RainbowFishSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("q", (-1847), (-1847), (-1847));
      try { 
        RainbowFishSerializer.writeV1(rainbowFishV2_0, "q");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        RainbowFishSerializer.readV1((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.luwatar.tolerantreader.RainbowFishV2");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "iUhE<T=@E1|");
      try { 
        RainbowFishSerializer.readV1("com.luwatar.tolerantreader.RainbowFishV2");
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid stream header: 69556845
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8~");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      try { 
        RainbowFishSerializer.readV1("8~");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8~");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      try { 
        RainbowFishSerializer.readV1("8~");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      try { 
        RainbowFishSerializer.readV1("NM%AYWXSDY@}|Z:|O");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RainbowFish rainbowFish0 = new RainbowFish("", 1, 1, 1);
      try { 
        RainbowFishSerializer.writeV1(rainbowFish0, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RainbowFishV2 rainbowFishV2_0 = new RainbowFishV2("NM%AYWXSDY@}|Z:|O", 0, 1366, 0, true, true, true);
      RainbowFishSerializer.writeV2(rainbowFishV2_0, "NM%AYWXSDY@}|Z:|O");
      RainbowFish rainbowFish0 = RainbowFishSerializer.readV1("NM%AYWXSDY@}|Z:|O");
      assertEquals(1366, rainbowFish0.getLengthMeters());
  }
}
