/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:41:41 GMT 2021
 */

package com.iluwatar.commander.messagingservice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.commander.messagingservice.MessagingDatabase;
import com.iluwatar.commander.messagingservice.MessagingService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MessagingDatabase_ESTest extends MessagingDatabase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessagingDatabase messagingDatabase0 = new MessagingDatabase();
      Exception[] exceptionArray0 = new Exception[0];
      MessagingService messagingService0 = new MessagingService(messagingDatabase0, exceptionArray0);
      MessagingService.MessageToSend messagingService_MessageToSend0 = MessagingService.MessageToSend.PAYMENT_FAIL;
      MessagingService.MessageRequest messagingService_MessageRequest0 = messagingService0.new MessageRequest("PAYMENT_TRYING", messagingService_MessageToSend0);
      messagingDatabase0.add(messagingService_MessageRequest0);
      MessagingService.MessageRequest messagingService_MessageRequest1 = messagingDatabase0.get("PAYMENT_TRYING");
      assertSame(messagingService_MessageRequest1, messagingService_MessageRequest0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MessagingDatabase messagingDatabase0 = new MessagingDatabase();
      Exception[] exceptionArray0 = new Exception[0];
      MessagingService messagingService0 = new MessagingService(messagingDatabase0, exceptionArray0);
      MessagingService.MessageToSend messagingService_MessageToSend0 = MessagingService.MessageToSend.PAYMENT_FAIL;
      MessagingService.MessageRequest messagingService_MessageRequest0 = messagingService0.new MessageRequest("PAYMENT_TRYING", messagingService_MessageToSend0);
      messagingDatabase0.add(messagingService_MessageRequest0);
      MessagingService.MessageRequest messagingService_MessageRequest1 = messagingDatabase0.add(messagingService_MessageRequest0);
      assertSame(messagingService_MessageRequest0, messagingService_MessageRequest1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MessagingDatabase messagingDatabase0 = new MessagingDatabase();
      // Undeclared exception!
      try { 
        messagingDatabase0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"Object.hashCode()\" because \"key\" is null
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MessagingDatabase messagingDatabase0 = new MessagingDatabase();
      // Undeclared exception!
      try { 
        messagingDatabase0.add((MessagingService.MessageRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read field \"reqId\" because \"r\" is null
         //
         verifyException("com.iluwatar.commander.messagingservice.MessagingDatabase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MessagingDatabase messagingDatabase0 = new MessagingDatabase();
      MessagingService.MessageRequest messagingService_MessageRequest0 = messagingDatabase0.get(".3");
      assertNull(messagingService_MessageRequest0);
  }
}
