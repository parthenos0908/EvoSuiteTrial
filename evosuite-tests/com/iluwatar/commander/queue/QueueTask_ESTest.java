/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:48:42 GMT 2021
 */

package com.iluwatar.commander.queue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.commander.Order;
import com.iluwatar.commander.queue.QueueTask;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueueTask_ESTest extends QueueTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Order order0 = mock(Order.class, new ViolatedAssumptionAnswer());
      QueueTask.TaskType queueTask_TaskType0 = QueueTask.TaskType.MESSAGING;
      QueueTask queueTask0 = new QueueTask(order0, queueTask_TaskType0, 1);
      assertEquals(1, queueTask0.messageType);
      assertEquals((-1L), queueTask0.firstAttemptTime);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QueueTask.TaskType queueTask_TaskType0 = QueueTask.TaskType.MESSAGING;
      QueueTask queueTask0 = new QueueTask((Order) null, queueTask_TaskType0, 1);
      String string0 = queueTask0.getType();
      assertEquals((-1L), queueTask0.firstAttemptTime);
      assertEquals("Payment Error Message", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueueTask.TaskType queueTask_TaskType0 = QueueTask.TaskType.MESSAGING;
      QueueTask queueTask0 = new QueueTask((Order) null, queueTask_TaskType0, 0);
      String string0 = queueTask0.getType();
      assertEquals((-1L), queueTask0.firstAttemptTime);
      assertEquals("Payment Failure Message", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QueueTask.TaskType queueTask_TaskType0 = QueueTask.TaskType.PAYMENT;
      QueueTask queueTask0 = new QueueTask((Order) null, queueTask_TaskType0, 0);
      String string0 = queueTask0.getType();
      assertEquals(0, queueTask0.messageType);
      assertEquals((-1L), queueTask0.firstAttemptTime);
      assertEquals("PAYMENT", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QueueTask.TaskType queueTask_TaskType0 = QueueTask.TaskType.MESSAGING;
      QueueTask queueTask0 = new QueueTask((Order) null, queueTask_TaskType0, (-1145));
      String string0 = queueTask0.getType();
      assertEquals((-1145), queueTask0.messageType);
      assertEquals("Payment Success Message", string0);
      assertEquals((-1L), queueTask0.firstAttemptTime);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QueueTask queueTask0 = new QueueTask((Order) null, (QueueTask.TaskType) null, 70);
      // Undeclared exception!
      try { 
        queueTask0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.commander.queue.QueueTask$TaskType.equals(Object)\" because \"this.taskType\" is null
         //
         verifyException("com.iluwatar.commander.queue.QueueTask", e);
      }
  }
}
