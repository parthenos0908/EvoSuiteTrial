/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:44:13 GMT 2021
 */

package com.iluwatar.commander.paymentservice;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.commander.paymentservice.PaymentDatabase;
import com.iluwatar.commander.paymentservice.PaymentService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentDatabase_ESTest extends PaymentDatabase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PaymentDatabase paymentDatabase0 = new PaymentDatabase();
      PaymentService.PaymentRequest paymentService_PaymentRequest0 = paymentDatabase0.get("");
      assertNull(paymentService_PaymentRequest0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PaymentDatabase paymentDatabase0 = new PaymentDatabase();
      Exception[] exceptionArray0 = new Exception[3];
      MockException mockException0 = new MockException();
      exceptionArray0[0] = (Exception) mockException0;
      exceptionArray0[1] = (Exception) mockException0;
      exceptionArray0[2] = (Exception) mockException0;
      PaymentService paymentService0 = new PaymentService(paymentDatabase0, exceptionArray0);
      PaymentService.PaymentRequest paymentService_PaymentRequest0 = paymentService0.new PaymentRequest("com.iluwatar.commander.paymentservice.PaymentService", (-730.9708F));
      paymentDatabase0.add(paymentService_PaymentRequest0);
      PaymentService.PaymentRequest paymentService_PaymentRequest1 = paymentDatabase0.add(paymentService_PaymentRequest0);
      assertSame(paymentService_PaymentRequest0, paymentService_PaymentRequest1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PaymentDatabase paymentDatabase0 = new PaymentDatabase();
      // Undeclared exception!
      try { 
        paymentDatabase0.add((PaymentService.PaymentRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read field \"transactionId\" because \"r\" is null
         //
         verifyException("com.iluwatar.commander.paymentservice.PaymentDatabase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PaymentDatabase paymentDatabase0 = new PaymentDatabase();
      Exception[] exceptionArray0 = new Exception[1];
      MockException mockException0 = new MockException((String) null);
      exceptionArray0[0] = (Exception) mockException0;
      PaymentService paymentService0 = new PaymentService(paymentDatabase0, exceptionArray0);
      PaymentService.PaymentRequest paymentService_PaymentRequest0 = paymentService0.new PaymentRequest("", 3066.1F);
      paymentDatabase0.add(paymentService_PaymentRequest0);
      PaymentService.PaymentRequest paymentService_PaymentRequest1 = paymentDatabase0.get("");
      assertSame(paymentService_PaymentRequest1, paymentService_PaymentRequest0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PaymentDatabase paymentDatabase0 = new PaymentDatabase();
      // Undeclared exception!
      try { 
        paymentDatabase0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"Object.hashCode()\" because \"key\" is null
         //
         verifyException("java.util.Hashtable", e);
      }
  }
}
