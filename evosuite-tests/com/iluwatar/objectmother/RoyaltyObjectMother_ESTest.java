/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 10:17:01 GMT 2021
 */

package com.iluwatar.objectmother;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.objectmother.King;
import com.iluwatar.objectmother.Queen;
import com.iluwatar.objectmother.RoyaltyObjectMother;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RoyaltyObjectMother_ESTest extends RoyaltyObjectMother_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Queen queen0 = RoyaltyObjectMother.createFlirtyQueen();
      assertTrue(queen0.isFlirty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      King king0 = RoyaltyObjectMother.createDrunkKing();
      assertFalse(king0.isHappy());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      King king0 = RoyaltyObjectMother.createSoberUnhappyKing();
      assertFalse(king0.isHappy());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RoyaltyObjectMother royaltyObjectMother0 = new RoyaltyObjectMother();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      King king0 = RoyaltyObjectMother.createHappyDrunkKing();
      assertTrue(king0.isHappy());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Queen queen0 = RoyaltyObjectMother.createNotFlirtyQueen();
      assertFalse(queen0.isFlirty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      King king0 = RoyaltyObjectMother.createHappyKing();
      assertTrue(king0.isHappy());
  }
}
