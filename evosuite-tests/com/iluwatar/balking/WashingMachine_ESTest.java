/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 02:47:03 GMT 2021
 */

package com.iluwatar.balking;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.balking.DelayProvider;
import com.iluwatar.balking.WashingMachine;
import com.iluwatar.balking.WashingMachineState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WashingMachine_ESTest extends WashingMachine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WashingMachine washingMachine0 = new WashingMachine((DelayProvider) null);
      // Undeclared exception!
      try { 
        washingMachine0.wash();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.balking.DelayProvider.executeAfterDelay(long, java.util.concurrent.TimeUnit, java.lang.Runnable)\" because \"this.delayProvider\" is null
         //
         verifyException("com.iluwatar.balking.WashingMachine", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WashingMachine washingMachine0 = new WashingMachine();
      WashingMachineState washingMachineState0 = washingMachine0.getWashingMachineState();
      assertEquals(WashingMachineState.ENABLED, washingMachineState0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DelayProvider delayProvider0 = mock(DelayProvider.class, new ViolatedAssumptionAnswer());
      WashingMachine washingMachine0 = new WashingMachine(delayProvider0);
      washingMachine0.wash();
      washingMachine0.wash();
      assertEquals(WashingMachineState.WASHING, washingMachine0.getWashingMachineState());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WashingMachine washingMachine0 = new WashingMachine();
      washingMachine0.wash();
      assertEquals(WashingMachineState.ENABLED, washingMachine0.getWashingMachineState());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WashingMachine washingMachine0 = new WashingMachine();
      washingMachine0.endOfWashing();
      assertEquals(WashingMachineState.ENABLED, washingMachine0.getWashingMachineState());
  }
}
