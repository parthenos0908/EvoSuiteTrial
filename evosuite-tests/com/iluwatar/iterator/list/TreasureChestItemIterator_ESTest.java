/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:47:26 GMT 2021
 */

package com.iluwatar.iterator.list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.iterator.list.Item;
import com.iluwatar.iterator.list.ItemType;
import com.iluwatar.iterator.list.TreasureChest;
import com.iluwatar.iterator.list.TreasureChestItemIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TreasureChestItemIterator_ESTest extends TreasureChestItemIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ItemType itemType0 = ItemType.RING;
      TreasureChestItemIterator treasureChestItemIterator0 = new TreasureChestItemIterator((TreasureChest) null, itemType0);
      // Undeclared exception!
      try { 
        treasureChestItemIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.iterator.list.TreasureChest.getItems()\" because \"this.chest\" is null
         //
         verifyException("com.iluwatar.iterator.list.TreasureChestItemIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ItemType itemType0 = ItemType.ANY;
      TreasureChestItemIterator treasureChestItemIterator0 = new TreasureChestItemIterator((TreasureChest) null, itemType0);
      // Undeclared exception!
      try { 
        treasureChestItemIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.iterator.list.TreasureChest.getItems()\" because \"this.chest\" is null
         //
         verifyException("com.iluwatar.iterator.list.TreasureChestItemIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreasureChest treasureChest0 = new TreasureChest();
      ItemType itemType0 = ItemType.ANY;
      TreasureChestItemIterator treasureChestItemIterator0 = new TreasureChestItemIterator(treasureChest0, itemType0);
      boolean boolean0 = treasureChestItemIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreasureChest treasureChest0 = new TreasureChest();
      ItemType itemType0 = ItemType.WEAPON;
      TreasureChestItemIterator treasureChestItemIterator0 = new TreasureChestItemIterator(treasureChest0, itemType0);
      treasureChestItemIterator0.next();
      treasureChestItemIterator0.next();
      treasureChestItemIterator0.next();
      Item item0 = treasureChestItemIterator0.next();
      assertNull(item0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TreasureChest treasureChest0 = new TreasureChest();
      ItemType itemType0 = ItemType.RING;
      TreasureChestItemIterator treasureChestItemIterator0 = new TreasureChestItemIterator(treasureChest0, itemType0);
      Item item0 = treasureChestItemIterator0.next();
      assertEquals("Ring of shadows", item0.toString());
      assertNotNull(item0);
      
      treasureChestItemIterator0.next();
      boolean boolean0 = treasureChestItemIterator0.hasNext();
      assertFalse(boolean0);
  }
}
