/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:47:11 GMT 2021
 */

package com.iluwatar.sharding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.sharding.Data;
import com.iluwatar.sharding.LookupShardManager;
import com.iluwatar.sharding.Shard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupShardManager_ESTest extends LookupShardManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_2;
      Data data0 = new Data(1, "", data_DataType0);
      int int0 = lookupShardManager0.allocateShard(data0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_2;
      Shard shard0 = new Shard(0);
      lookupShardManager0.addNewShard(shard0);
      Data data0 = new Data(0, "d|", data_DataType0);
      // Undeclared exception!
      try { 
        lookupShardManager0.storeData(data0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      // Undeclared exception!
      try { 
        lookupShardManager0.allocateShard((Data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.sharding.Data.getKey()\" because \"data\" is null
         //
         verifyException("com.iluwatar.sharding.LookupShardManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data(1880, "b", data_DataType0);
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      Shard shard0 = new Shard(1880);
      lookupShardManager0.addNewShard(shard0);
      // Undeclared exception!
      try { 
        lookupShardManager0.allocateShard(data0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      Shard shard0 = new Shard(1);
      lookupShardManager0.addNewShard(shard0);
      Shard shard1 = new Shard((-1878));
      lookupShardManager0.addNewShard(shard1);
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data((-1025), "Vry;-oHDi6//nPxNC", data_DataType0);
      lookupShardManager0.storeData(data0);
      int int0 = lookupShardManager0.storeData(data0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LookupShardManager lookupShardManager0 = new LookupShardManager();
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data((-1025), "Vry;-oHDi6//nPxNC", data_DataType0);
      // Undeclared exception!
      try { 
        lookupShardManager0.storeData(data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.sharding.Shard.storeData(com.iluwatar.sharding.Data)\" because \"shard\" is null
         //
         verifyException("com.iluwatar.sharding.LookupShardManager", e);
      }
  }
}
