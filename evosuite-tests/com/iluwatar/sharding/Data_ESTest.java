/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:44:57 GMT 2021
 */

package com.iluwatar.sharding;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.sharding.Data;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Data_ESTest extends Data_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      data0.getValue();
      assertEquals("Data {key=1, value='null', type=TYPE_1}", data0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data((-1), "", data_DataType0);
      data0.getValue();
      assertEquals((-1), data0.getKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      data0.getType();
      assertEquals(1, data0.getKey());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data((-1), "", data_DataType0);
      int int0 = data0.getKey();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_2;
      Data data0 = new Data(0, "", data_DataType0);
      String string0 = data0.toString();
      assertEquals("Data {key=0, value='', type=TYPE_2}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      data0.setType(data_DataType0);
      assertEquals("Data {key=1, value='null', type=TYPE_1}", data0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      int int0 = data0.getKey();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      assertEquals("Data {key=1, value='null', type=TYPE_1}", data0.toString());
      
      data0.setKey(0);
      int int0 = data0.getKey();
      assertEquals("Data {key=0, value='null', type=TYPE_1}", data0.toString());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_1;
      Data data0 = new Data(1, (String) null, data_DataType0);
      data0.setValue("t;SXxd+|5<!X\"?");
      assertEquals(1, data0.getKey());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Data data0 = new Data(0, (String) null, (Data.DataType) null);
      data0.getType();
      assertEquals("Data {key=0, value='null', type=null}", data0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Data.DataType data_DataType0 = Data.DataType.TYPE_3;
      Data data0 = new Data((-1), "34vR{2d", data_DataType0);
      data0.getValue();
      assertEquals((-1), data0.getKey());
  }
}
