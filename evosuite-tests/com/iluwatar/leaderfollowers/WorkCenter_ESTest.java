/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 09:19:54 GMT 2021
 */

package com.iluwatar.leaderfollowers;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.leaderfollowers.TaskHandler;
import com.iluwatar.leaderfollowers.TaskSet;
import com.iluwatar.leaderfollowers.WorkCenter;
import com.iluwatar.leaderfollowers.Worker;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WorkCenter_ESTest extends WorkCenter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskHandler taskHandler0 = new TaskHandler();
      workCenter0.createWorkers(1259, (TaskSet) null, taskHandler0);
      List<Worker> list0 = workCenter0.getWorkers();
      assertEquals(1259, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskHandler taskHandler0 = new TaskHandler();
      workCenter0.createWorkers(1259, (TaskSet) null, taskHandler0);
      workCenter0.promoteLeader();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      workCenter0.promoteLeader();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskSet taskSet0 = new TaskSet();
      TaskHandler taskHandler0 = new TaskHandler();
      workCenter0.createWorkers(10, taskSet0, taskHandler0);
      Worker worker0 = workCenter0.getLeader();
      assertNotNull(worker0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      List<Worker> list0 = workCenter0.getWorkers();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      Worker worker0 = workCenter0.getLeader();
      workCenter0.removeWorker(worker0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      workCenter0.addWorker((Worker) null);
  }
}
