/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 09:22:00 GMT 2021
 */

package com.iluwatar.leaderfollowers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.leaderfollowers.Task;
import com.iluwatar.leaderfollowers.TaskHandler;
import com.iluwatar.leaderfollowers.TaskSet;
import com.iluwatar.leaderfollowers.WorkCenter;
import com.iluwatar.leaderfollowers.Worker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Worker_ESTest extends Worker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskHandler taskHandler0 = new TaskHandler();
      Worker worker0 = new Worker((-1L), workCenter0, (TaskSet) null, taskHandler0);
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.leaderfollowers.TaskSet.getTask()\" because \"this.taskSet\" is null
         //
         verifyException("com.iluwatar.leaderfollowers.Worker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskHandler taskHandler0 = new TaskHandler();
      Worker worker0 = new Worker(0L, workCenter0, (TaskSet) null, taskHandler0);
      Object object0 = new Object();
      boolean boolean0 = worker0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskSet taskSet0 = new TaskSet();
      Task task0 = new Task((-2032));
      taskSet0.addTask(task0);
      TaskHandler taskHandler0 = new TaskHandler();
      Worker worker0 = new Worker((-363L), workCenter0, taskSet0, taskHandler0);
      // Undeclared exception!
      try { 
        worker0.run();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout value is negative
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WorkCenter workCenter0 = new WorkCenter();
      TaskHandler taskHandler0 = new TaskHandler();
      Worker worker0 = new Worker((-1L), workCenter0, (TaskSet) null, taskHandler0);
      worker0.hashCode();
  }
}
