/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:39:05 GMT 2021
 */

package com.iluwatar.servicelayer.wizard;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.servicelayer.spellbook.Spellbook;
import com.iluwatar.servicelayer.wizard.Wizard;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Wizard_ESTest extends Wizard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      wizard0.setName("com.iluwatar.servicelayer.wizard.Wizard");
      String string0 = wizard0.toString();
      assertEquals("com.iluwatar.servicelayer.wizard.Wizard", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Wizard wizard0 = new Wizard("");
      String string0 = wizard0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Wizard wizard0 = new Wizard("");
      Spellbook spellbook0 = new Spellbook();
      wizard0.addSpellbook(spellbook0);
      Set<Spellbook> set0 = wizard0.getSpellbooks();
      assertTrue(set0.contains(spellbook0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      String string0 = wizard0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Wizard wizard0 = new Wizard("tsd4@*.a[M/JWJ_[X*");
      wizard0.setName("");
      String string0 = wizard0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Wizard wizard0 = new Wizard("!apR\"{>yt1l]Si");
      Long long0 = new Long(4447L);
      wizard0.setId(long0);
      Long long1 = wizard0.getId();
      assertEquals(4447L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      Long long0 = Long.valueOf((-2040L));
      wizard0.setId(long0);
      Long long1 = wizard0.getId();
      assertEquals((-2040L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      String string0 = wizard0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Wizard wizard0 = new Wizard("!apR\"{>yt1l]Si");
      String string0 = wizard0.getName();
      assertEquals("!apR\"{>yt1l]Si", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Wizard wizard0 = new Wizard("!apR\"{>yt1l]Si");
      Long long0 = wizard0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Wizard wizard0 = new Wizard("!apR\"{>yt1l]Si");
      wizard0.setSpellbooks((Set<Spellbook>) null);
      Set<Spellbook> set0 = wizard0.getSpellbooks();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Wizard wizard0 = new Wizard("");
      Long long0 = new Long(0L);
      wizard0.setId(long0);
      Long long1 = wizard0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      // Undeclared exception!
      try { 
        wizard0.addSpellbook((Spellbook) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.servicelayer.spellbook.Spellbook.getWizards()\" because \"spellbook\" is null
         //
         verifyException("com.iluwatar.servicelayer.wizard.Wizard", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Wizard wizard0 = new Wizard();
      Set<Spellbook> set0 = wizard0.getSpellbooks();
      assertEquals(0, set0.size());
  }
}
