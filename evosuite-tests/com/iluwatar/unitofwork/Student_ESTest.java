/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:56:43 GMT 2021
 */

package com.iluwatar.unitofwork;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.unitofwork.Student;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Student_ESTest extends Student_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(1868);
      Student student0 = new Student(integer0, (String) null, (String) null);
      String string0 = student0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Student student0 = new Student((Integer) null, "", "");
      String string0 = student0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Student student0 = new Student(integer0, (String) null, (String) null);
      Integer integer1 = student0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(1868);
      Student student0 = new Student(integer0, (String) null, (String) null);
      Integer integer1 = student0.getId();
      assertEquals(1868, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Student student0 = new Student((Integer) null, "", "");
      Integer integer0 = student0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(1868);
      Student student0 = new Student(integer0, (String) null, (String) null);
      String string0 = student0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Student student0 = new Student((Integer) null, "", "");
      String string0 = student0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-1926));
      Student student0 = new Student(integer0, "RZhVjApr'=2v", "'");
      student0.getId();
      assertEquals("'", student0.getAddress());
      assertEquals("RZhVjApr'=2v", student0.getName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer((-1926));
      Student student0 = new Student(integer0, "RZhVjApr'=2v", "'");
      String string0 = student0.getName();
      assertEquals("'", student0.getAddress());
      assertEquals("RZhVjApr'=2v", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Integer integer0 = new Integer((-1412));
      Student student0 = new Student(integer0, "s~Yu=*& $w ", "6Ql\fznxCaurw'KO&ET");
      String string0 = student0.getAddress();
      assertEquals("s~Yu=*& $w ", student0.getName());
      assertEquals("6Ql\fznxCaurw'KO&ET", string0);
  }
}
