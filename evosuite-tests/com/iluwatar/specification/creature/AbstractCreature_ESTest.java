/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:04:41 GMT 2021
 */

package com.iluwatar.specification.creature;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.specification.creature.Dragon;
import com.iluwatar.specification.creature.Goblin;
import com.iluwatar.specification.creature.Troll;
import com.iluwatar.specification.property.Color;
import com.iluwatar.specification.property.Mass;
import com.iluwatar.specification.property.Movement;
import com.iluwatar.specification.property.Size;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCreature_ESTest extends AbstractCreature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Mass mass0 = new Mass((-326.0960342090236));
      Goblin goblin0 = new Goblin(mass0);
      Mass mass1 = goblin0.getMass();
      assertSame(mass0, mass1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Dragon dragon0 = new Dragon((Mass) null);
      Mass mass0 = dragon0.getMass();
      assertNull(mass0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Dragon dragon0 = new Dragon((Mass) null);
      Movement movement0 = dragon0.getMovement();
      assertEquals("flying", movement0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Dragon dragon0 = new Dragon((Mass) null);
      String string0 = dragon0.toString();
      assertEquals("Dragon [size=large, movement=flying, color=red, mass=null]", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Dragon dragon0 = new Dragon((Mass) null);
      Color color0 = dragon0.getColor();
      assertEquals("red", color0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Dragon dragon0 = new Dragon((Mass) null);
      Size size0 = dragon0.getSize();
      assertEquals("large", size0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Troll troll0 = new Troll();
      String string0 = troll0.getName();
      assertEquals("Troll", string0);
  }
}
