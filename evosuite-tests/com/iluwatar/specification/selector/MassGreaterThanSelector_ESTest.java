/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:17:24 GMT 2021
 */

package com.iluwatar.specification.selector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.specification.creature.Creature;
import com.iluwatar.specification.creature.Goblin;
import com.iluwatar.specification.creature.Octopus;
import com.iluwatar.specification.selector.MassGreaterThanSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MassGreaterThanSelector_ESTest extends MassGreaterThanSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MassGreaterThanSelector massGreaterThanSelector0 = new MassGreaterThanSelector(0.0);
      Goblin goblin0 = new Goblin();
      boolean boolean0 = massGreaterThanSelector0.test((Creature) goblin0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MassGreaterThanSelector massGreaterThanSelector0 = new MassGreaterThanSelector(1.0);
      // Undeclared exception!
      try { 
        massGreaterThanSelector0.test((Creature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.specification.creature.Creature.getMass()\" because \"t\" is null
         //
         verifyException("com.iluwatar.specification.selector.MassGreaterThanSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MassGreaterThanSelector massGreaterThanSelector0 = new MassGreaterThanSelector(2525.4529582046);
      Octopus octopus0 = new Octopus();
      boolean boolean0 = massGreaterThanSelector0.test((Creature) octopus0);
      assertFalse(boolean0);
  }
}
