/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:31:40 GMT 2021
 */

package com.iluwatar.serverless.baas.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.serverless.baas.model.Address;
import com.iluwatar.serverless.baas.model.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Person_ESTest extends Person_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Person person0 = new Person();
      Address address0 = new Address();
      address0.setAddressLineOne("6(Eg)Mbrb");
      person0.setAddress(address0);
      person0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Person person0 = new Person();
      person0.setLastName("6(Eg)Mbrb");
      person0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Person person0 = new Person();
      person0.setLastName("6(Eg)Mbrb");
      String string0 = person0.getLastName();
      assertEquals("6(Eg)Mbrb", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Person person0 = new Person();
      person0.setLastName("");
      String string0 = person0.getLastName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Person person0 = new Person();
      person0.setId("`\")^_4x~@ogw.Su");
      String string0 = person0.getId();
      assertEquals("`\")^_4x~@ogw.Su", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Person person0 = new Person();
      person0.setFirstName("/wWxA");
      String string0 = person0.getFirstName();
      assertEquals("/wWxA", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Person person0 = new Person();
      person0.setFirstName("");
      String string0 = person0.getFirstName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Person person0 = new Person();
      Address address0 = new Address();
      person0.setAddress(address0);
      Address address1 = person0.getAddress();
      assertNull(address1.getAddressLineOne());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Person person0 = new Person();
      person0.setFirstName("kZS I@yO*)})FMX{");
      person0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Person person0 = new Person();
      boolean boolean0 = person0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Person person0 = new Person();
      boolean boolean0 = person0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Person person0 = new Person();
      boolean boolean0 = person0.equals(person0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Person person0 = new Person();
      Person person1 = new Person();
      boolean boolean0 = person0.equals(person1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.toString();
      assertEquals("Person{id='null', firstName='null', lastName='null', address=null}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Person person0 = new Person();
      person0.setLastName("");
      Person person1 = new Person();
      boolean boolean0 = person0.equals(person1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getLastName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getFirstName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Person person0 = new Person();
      String string0 = person0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Person person0 = new Person();
      Address address0 = person0.getAddress();
      assertNull(address0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Person person0 = new Person();
      person0.setId("");
      String string0 = person0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Person person0 = new Person();
      person0.setFirstName("");
      Person person1 = new Person();
      boolean boolean0 = person0.equals(person1);
      assertFalse(boolean0);
  }
}
