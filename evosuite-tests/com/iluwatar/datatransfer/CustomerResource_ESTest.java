/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 04:27:05 GMT 2021
 */

package com.iluwatar.datatransfer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.datatransfer.CustomerDto;
import com.iluwatar.datatransfer.CustomerResource;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomerResource_ESTest extends CustomerResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<CustomerDto> linkedList0 = new LinkedList<CustomerDto>();
      CustomerResource customerResource0 = new CustomerResource(linkedList0);
      customerResource0.delete("g^,t(vW>~ EvDz;U");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CustomerResource customerResource0 = new CustomerResource((List<CustomerDto>) null);
      List<CustomerDto> list0 = customerResource0.getAllCustomers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<CustomerDto> linkedList0 = new LinkedList<CustomerDto>();
      CustomerResource customerResource0 = new CustomerResource(linkedList0);
      CustomerDto customerDto0 = new CustomerDto("g^,t(vW>~ EvDz;U", "g{kMI/t`B/z&'|we^", "c-{e\"U=?uJ^2$R~");
      customerResource0.save(customerDto0);
      List<CustomerDto> list0 = customerResource0.getAllCustomers();
      assertTrue(list0.contains(customerDto0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      List<CustomerDto> list0 = List.of();
      CustomerResource customerResource0 = new CustomerResource(list0);
      // Undeclared exception!
      try { 
        customerResource0.save((CustomerDto) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ImmutableCollections", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      List<CustomerDto> list0 = List.of();
      CustomerResource customerResource0 = new CustomerResource(list0);
      // Undeclared exception!
      try { 
        customerResource0.delete("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ImmutableCollections", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<CustomerDto> linkedList0 = new LinkedList<CustomerDto>();
      CustomerResource customerResource0 = new CustomerResource(linkedList0);
      List<CustomerDto> list0 = customerResource0.getAllCustomers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CustomerResource customerResource0 = new CustomerResource((List<CustomerDto>) null);
      // Undeclared exception!
      try { 
        customerResource0.delete("com.iluwatar.datatransfer.CustomerResource");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"java.util.List.removeIf(java.util.function.Predicate)\" because \"this.customers\" is null
         //
         verifyException("com.iluwatar.datatransfer.CustomerResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CustomerResource customerResource0 = new CustomerResource((List<CustomerDto>) null);
      // Undeclared exception!
      try { 
        customerResource0.save((CustomerDto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"java.util.List.add(Object)\" because \"this.customers\" is null
         //
         verifyException("com.iluwatar.datatransfer.CustomerResource", e);
      }
  }
}
