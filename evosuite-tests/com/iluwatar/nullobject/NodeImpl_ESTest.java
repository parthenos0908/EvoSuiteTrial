/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 10:14:32 GMT 2021
 */

package com.iluwatar.nullobject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.nullobject.Node;
import com.iluwatar.nullobject.NodeImpl;
import com.iluwatar.nullobject.NullNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodeImpl_ESTest extends NodeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      NodeImpl nodeImpl1 = new NodeImpl("J@@y8u*luVUt`v?", nodeImpl0, nodeImpl0);
      int int0 = nodeImpl1.getTreeSize();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeImpl nodeImpl0 = new NodeImpl(".?FZAMpxom?", (Node) null, (Node) null);
      Node node0 = nodeImpl0.getRight();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      NodeImpl nodeImpl1 = new NodeImpl("J@@y8u*luVUt`v?", nodeImpl0, nodeImpl0);
      Node node0 = nodeImpl1.getRight();
      assertSame(node0, nodeImpl0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl((String) null, nullNode0, nullNode0);
      String string0 = nodeImpl0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("", nullNode0, nullNode0);
      String string0 = nodeImpl0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeImpl nodeImpl0 = new NodeImpl("aHlKes.%HQwqx", (Node) null, (Node) null);
      Node node0 = nodeImpl0.getLeft();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      NodeImpl nodeImpl1 = new NodeImpl("J@@y8u*luVUt`v?", nodeImpl0, nodeImpl0);
      Node node0 = nodeImpl1.getLeft();
      assertNotSame(nodeImpl1, node0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeImpl nodeImpl0 = new NodeImpl("v9Vm:u3Ch?a|zZJ<", (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        nodeImpl0.walk();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.nullobject.Node.getTreeSize()\" because \"this.left\" is null
         //
         verifyException("com.iluwatar.nullobject.NodeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      // Undeclared exception!
      try { 
        nullNode0.walk();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeImpl nodeImpl0 = new NodeImpl(":df~[bQA6~./wvPB/h", (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        nodeImpl0.getTreeSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.nullobject.Node.getTreeSize()\" because \"this.left\" is null
         //
         verifyException("com.iluwatar.nullobject.NodeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      // Undeclared exception!
      try { 
        nullNode0.getTreeSize();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      // Undeclared exception!
      try { 
        nullNode0.getRight();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      // Undeclared exception!
      try { 
        nullNode0.getLeft();
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      nodeImpl0.walk();
      assertEquals(1, nodeImpl0.getTreeSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      NodeImpl nodeImpl1 = new NodeImpl("J@@y8u*luVUt`v?", nodeImpl0, nodeImpl0);
      nodeImpl1.walk();
      assertEquals(3, nodeImpl1.getTreeSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      Node node0 = nodeImpl0.getRight();
      assertNull(node0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      String string0 = nodeImpl0.getName();
      assertEquals("J@@y8u*luVUt`v?", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("J@@y8u*luVUt`v?", nullNode0, nullNode0);
      Node node0 = nodeImpl0.getLeft();
      assertSame(nullNode0, node0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NullNode nullNode0 = NullNode.getInstance();
      NodeImpl nodeImpl0 = new NodeImpl("AmO/3z;\"Ny)|z|", nullNode0, nullNode0);
      NodeImpl nodeImpl1 = new NodeImpl("AmO/3z;\"Ny)|z|", nodeImpl0, nullNode0);
      nodeImpl1.walk();
      assertEquals(2, nodeImpl1.getTreeSize());
  }
}
