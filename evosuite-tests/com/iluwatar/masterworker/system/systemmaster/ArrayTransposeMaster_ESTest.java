/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 09:32:29 GMT 2021
 */

package com.iluwatar.masterworker.system.systemmaster;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.masterworker.ArrayResult;
import com.iluwatar.masterworker.Result;
import com.iluwatar.masterworker.system.systemmaster.ArrayTransposeMaster;
import com.iluwatar.masterworker.system.systemworkers.ArrayTransposeWorker;
import com.iluwatar.masterworker.system.systemworkers.Worker;
import java.util.ArrayList;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayTransposeMaster_ESTest extends ArrayTransposeMaster_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = new ArrayTransposeMaster(1550);
      ArrayList<Worker> arrayList0 = arrayTransposeMaster0.setWorkers(0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = new ArrayTransposeMaster(1550);
      ArrayList<Worker> arrayList0 = arrayTransposeMaster0.setWorkers(1550);
      assertEquals(1550, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = new ArrayTransposeMaster(754);
      // Undeclared exception!
      try { 
        arrayTransposeMaster0.setWorkers((-736));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -736
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = new ArrayTransposeMaster(0);
      Result<ArrayResult> result0 = (Result<ArrayResult>) mock(Result.class, new ViolatedAssumptionAnswer());
      ArrayTransposeWorker arrayTransposeWorker0 = new ArrayTransposeWorker(arrayTransposeMaster0, 0);
      arrayTransposeMaster0.receiveData(result0, arrayTransposeWorker0);
      // Undeclared exception!
      try { 
        arrayTransposeMaster0.aggregateData();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.iluwatar.masterworker.Result$MockitoMock$247560838 cannot be cast to class com.iluwatar.masterworker.ArrayResult (com.iluwatar.masterworker.Result$MockitoMock$247560838 and com.iluwatar.masterworker.ArrayResult are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7fcb706b)
         //
         verifyException("com.iluwatar.masterworker.system.systemmaster.ArrayTransposeMaster", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = null;
      try {
        arrayTransposeMaster0 = new ArrayTransposeMaster((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayTransposeMaster arrayTransposeMaster0 = new ArrayTransposeMaster(726);
      // Undeclared exception!
      try { 
        arrayTransposeMaster0.aggregateData();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$EmptyEnumeration", e);
      }
  }
}
