/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 10:01:39 GMT 2021
 */

package com.iluwatar.monostate;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.monostate.LoadBalancer;
import com.iluwatar.monostate.Request;
import com.iluwatar.monostate.Server;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoadBalancer_ESTest extends LoadBalancer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoadBalancer loadBalancer0 = new LoadBalancer();
      Request request0 = new Request("");
      loadBalancer0.serverRequest(request0);
      int int0 = loadBalancer0.getLastServedId();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoadBalancer loadBalancer0 = new LoadBalancer();
      Request request0 = new Request("");
      loadBalancer0.serverRequest(request0);
      loadBalancer0.serverRequest(request0);
      loadBalancer0.serverRequest(request0);
      loadBalancer0.serverRequest(request0);
      loadBalancer0.serverRequest(request0);
      loadBalancer0.serverRequest(request0);
      //  // Unstable assertion: assertEquals(6, loadBalancer0.getLastServedId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoadBalancer loadBalancer0 = new LoadBalancer();
      Server server0 = new Server("W_ Z@]", (-1262), 1912);
      loadBalancer0.addServer(server0);
      assertEquals((-1262), server0.getPort());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoadBalancer loadBalancer0 = new LoadBalancer();
      int int0 = loadBalancer0.getNoOfServers();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LoadBalancer loadBalancer0 = new LoadBalancer();
      int int0 = loadBalancer0.getLastServedId();
      assertEquals(0, int0);
  }
}
