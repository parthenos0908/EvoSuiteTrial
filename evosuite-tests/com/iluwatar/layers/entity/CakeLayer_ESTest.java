/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:53:09 GMT 2021
 */

package com.iluwatar.layers.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.layers.entity.Cake;
import com.iluwatar.layers.entity.CakeLayer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CakeLayer_ESTest extends CakeLayer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      String string0 = cakeLayer0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer("", (-2290));
      cakeLayer0.getName();
      assertEquals((-2290), cakeLayer0.getCalories());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      Long long0 = new Long(0);
      cakeLayer0.setId(long0);
      Long long1 = cakeLayer0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      Long long0 = new Long(1319);
      cakeLayer0.setId(long0);
      Long long1 = cakeLayer0.getId();
      assertEquals(1319L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      int int0 = cakeLayer0.getCalories();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      cakeLayer0.setCalories(1241);
      int int0 = cakeLayer0.getCalories();
      assertEquals(1241, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      Cake cake0 = new Cake();
      cakeLayer0.setCake(cake0);
      Cake cake1 = cakeLayer0.getCake();
      assertNull(cake1.getId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      cakeLayer0.setName(":pdv");
      assertEquals((-2814), cakeLayer0.getCalories());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      Long long0 = new Long((-2814));
      cakeLayer0.setId(long0);
      cakeLayer0.getId();
      assertEquals((-2814), cakeLayer0.getCalories());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      String string0 = cakeLayer0.toString();
      assertEquals("id=null name=:pdv calories=-2814", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      int int0 = cakeLayer0.getCalories();
      assertEquals((-2814), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer();
      Cake cake0 = cakeLayer0.getCake();
      assertNull(cake0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      cakeLayer0.getName();
      assertEquals((-2814), cakeLayer0.getCalories());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CakeLayer cakeLayer0 = new CakeLayer(":pdv", (-2814));
      cakeLayer0.getId();
      assertEquals((-2814), cakeLayer0.getCalories());
  }
}
