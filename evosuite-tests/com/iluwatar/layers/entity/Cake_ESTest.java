/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:52:00 GMT 2021
 */

package com.iluwatar.layers.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.layers.entity.Cake;
import com.iluwatar.layers.entity.CakeLayer;
import com.iluwatar.layers.entity.CakeTopping;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cake_ESTest extends Cake_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cake cake0 = new Cake();
      CakeTopping cakeTopping0 = new CakeTopping();
      cake0.setTopping(cakeTopping0);
      CakeTopping cakeTopping1 = cake0.getTopping();
      assertSame(cakeTopping1, cakeTopping0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cake cake0 = new Cake();
      CakeTopping cakeTopping0 = new CakeTopping("id=0 topping=null layers=java.util.HashSet@0000000003", 3);
      cake0.setTopping(cakeTopping0);
      CakeTopping cakeTopping1 = cake0.getTopping();
      assertNull(cakeTopping1.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cake cake0 = new Cake();
      cake0.setLayers((Set<CakeLayer>) null);
      Set<CakeLayer> set0 = cake0.getLayers();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cake cake0 = new Cake();
      Long long0 = new Long(0L);
      cake0.setId(long0);
      Long long1 = cake0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cake cake0 = new Cake();
      Long long0 = new Long(1777L);
      cake0.setId(long0);
      Long long1 = cake0.getId();
      assertEquals(1777L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cake cake0 = new Cake();
      Long long0 = new Long((-1775L));
      cake0.setId(long0);
      Long long1 = cake0.getId();
      assertEquals((-1775L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cake cake0 = new Cake();
      cake0.setLayers((Set<CakeLayer>) null);
      // Undeclared exception!
      try { 
        cake0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cake cake0 = new Cake();
      cake0.setLayers((Set<CakeLayer>) null);
      // Undeclared exception!
      try { 
        cake0.addLayer((CakeLayer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"java.util.Set.add(Object)\" because \"this.layers\" is null
         //
         verifyException("com.iluwatar.layers.entity.Cake", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cake cake0 = new Cake();
      CakeLayer cakeLayer0 = new CakeLayer();
      cake0.addLayer(cakeLayer0);
      Set<CakeLayer> set0 = cake0.getLayers();
      assertTrue(set0.contains(cakeLayer0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cake cake0 = new Cake();
      String string0 = cake0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cake cake0 = new Cake();
      Set<CakeLayer> set0 = cake0.getLayers();
      cake0.setLayers(set0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cake cake0 = new Cake();
      Long long0 = cake0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cake cake0 = new Cake();
      CakeTopping cakeTopping0 = new CakeTopping("", (-4819));
      cake0.setTopping(cakeTopping0);
      CakeTopping cakeTopping1 = cake0.getTopping();
      assertEquals((-4819), cakeTopping1.getCalories());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cake cake0 = new Cake();
      CakeTopping cakeTopping0 = cake0.getTopping();
      assertNull(cakeTopping0);
  }
}
