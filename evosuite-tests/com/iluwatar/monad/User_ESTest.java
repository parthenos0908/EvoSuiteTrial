/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 09:59:18 GMT 2021
 */

package com.iluwatar.monad;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.monad.Sex;
import com.iluwatar.monad.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User((String) null, 1, sex0, (String) null);
      user0.getSex();
      assertEquals(1, user0.getAge());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User((String) null, 1, sex0, (String) null);
      user0.getName();
      assertEquals(1, user0.getAge());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User("a+woPGNr/W>d2siSPz", (-4022), sex0, "a+woPGNr/W>d2siSPz");
      user0.getName();
      assertEquals((-4022), user0.getAge());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User((String) null, 1, sex0, (String) null);
      user0.getEmail();
      assertEquals(1, user0.getAge());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User("", (-1), sex0, "");
      user0.getEmail();
      assertEquals((-1), user0.getAge());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sex sex0 = Sex.FEMALE;
      User user0 = new User((String) null, 0, sex0, (String) null);
      int int0 = user0.getAge();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sex sex0 = Sex.MALE;
      User user0 = new User((String) null, 1, sex0, (String) null);
      int int0 = user0.getAge();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User("", (-3481), (Sex) null, "om.iluwatar.monad.Sex");
      int int0 = user0.getAge();
      assertEquals("om.iluwatar.monad.Sex", user0.getEmail());
      assertEquals("", user0.getName());
      assertEquals((-3481), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User("", (-3481), (Sex) null, "om.iluwatar.monad.Sex");
      String string0 = user0.getName();
      assertEquals((-3481), user0.getAge());
      assertEquals("", string0);
      assertEquals("om.iluwatar.monad.Sex", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User("", (-3481), (Sex) null, "om.iluwatar.monad.Sex");
      String string0 = user0.getEmail();
      assertEquals("", user0.getName());
      assertEquals((-3481), user0.getAge());
      assertEquals("om.iluwatar.monad.Sex", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User("", (-3481), (Sex) null, "om.iluwatar.monad.Sex");
      user0.getSex();
      assertEquals("om.iluwatar.monad.Sex", user0.getEmail());
      assertEquals((-3481), user0.getAge());
      assertEquals("", user0.getName());
  }
}
