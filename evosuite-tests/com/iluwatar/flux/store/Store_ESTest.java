/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 05:54:30 GMT 2021
 */

package com.iluwatar.flux.store;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.flux.action.Action;
import com.iluwatar.flux.action.Content;
import com.iluwatar.flux.action.ContentAction;
import com.iluwatar.flux.store.ContentStore;
import com.iluwatar.flux.store.MenuStore;
import com.iluwatar.flux.view.MenuView;
import com.iluwatar.flux.view.View;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Store_ESTest extends Store_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ContentStore contentStore0 = new ContentStore();
      Content content0 = Content.COMPANY;
      ContentAction contentAction0 = new ContentAction(content0);
      contentStore0.onAction(contentAction0);
      assertEquals(Content.COMPANY, contentStore0.getContent());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MenuStore menuStore0 = new MenuStore();
      // Undeclared exception!
      try { 
        menuStore0.onAction((Action) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.flux.action.Action.getType()\" because \"action\" is null
         //
         verifyException("com.iluwatar.flux.store.MenuStore", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ContentStore contentStore0 = new ContentStore();
      MenuView menuView0 = new MenuView();
      contentStore0.registerView(menuView0);
      Content content0 = Content.PRODUCTS;
      ContentAction contentAction0 = new ContentAction(content0);
      // Undeclared exception!
      try { 
        contentStore0.onAction(contentAction0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.iluwatar.flux.store.ContentStore cannot be cast to class com.iluwatar.flux.store.MenuStore (com.iluwatar.flux.store.ContentStore and com.iluwatar.flux.store.MenuStore are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5e370095)
         //
         verifyException("com.iluwatar.flux.view.MenuView", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ContentStore contentStore0 = new ContentStore();
      MenuView menuView0 = new MenuView();
      contentStore0.registerView(menuView0);
      // Undeclared exception!
      try { 
        contentStore0.notifyChange();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.iluwatar.flux.store.ContentStore cannot be cast to class com.iluwatar.flux.store.MenuStore (com.iluwatar.flux.store.ContentStore and com.iluwatar.flux.store.MenuStore are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5e370095)
         //
         verifyException("com.iluwatar.flux.view.MenuView", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ContentStore contentStore0 = new ContentStore();
      contentStore0.registerView((View) null);
      // Undeclared exception!
      try { 
        contentStore0.notifyChange();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.flux.view.View.storeChanged(com.iluwatar.flux.store.Store)\" because \"view\" is null
         //
         verifyException("com.iluwatar.flux.store.Store", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ContentStore contentStore0 = new ContentStore();
      contentStore0.notifyChange();
      assertEquals(Content.PRODUCTS, contentStore0.getContent());
  }
}
