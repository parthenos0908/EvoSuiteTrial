/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 05:55:43 GMT 2021
 */

package com.iluwatar.flux.view;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.flux.action.MenuItem;
import com.iluwatar.flux.store.ContentStore;
import com.iluwatar.flux.store.MenuStore;
import com.iluwatar.flux.store.Store;
import com.iluwatar.flux.view.MenuView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MenuView_ESTest extends MenuView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MenuView menuView0 = new MenuView();
      // Undeclared exception!
      try { 
        menuView0.storeChanged((Store) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.flux.store.MenuStore.getSelected()\" because \"menuStore\" is null
         //
         verifyException("com.iluwatar.flux.view.MenuView", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MenuView menuView0 = new MenuView();
      ContentStore contentStore0 = new ContentStore();
      // Undeclared exception!
      try { 
        menuView0.storeChanged(contentStore0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.iluwatar.flux.store.ContentStore cannot be cast to class com.iluwatar.flux.store.MenuStore (com.iluwatar.flux.store.ContentStore and com.iluwatar.flux.store.MenuStore are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @4729633a)
         //
         verifyException("com.iluwatar.flux.view.MenuView", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MenuView menuView0 = new MenuView();
      menuView0.render();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MenuView menuView0 = new MenuView();
      MenuItem menuItem0 = MenuItem.HOME;
      menuView0.itemClicked(menuItem0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MenuView menuView0 = new MenuView();
      MenuStore menuStore0 = new MenuStore();
      menuView0.storeChanged(menuStore0);
      assertEquals(MenuItem.HOME, menuStore0.getSelected());
  }
}
