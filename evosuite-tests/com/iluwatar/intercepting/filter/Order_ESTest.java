/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:33:08 GMT 2021
 */

package com.iluwatar.intercepting.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.intercepting.filter.Order;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Order_ESTest extends Order_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Order order0 = new Order("-xY3XJ8h^__3#JW ", "-xY3XJ8h^__3#JW ", "", "", "");
      assertEquals("", order0.getOrderItem());
      
      order0.setOrderItem("Qf");
      order0.getOrderItem();
      assertEquals("", order0.getAddress());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      String string0 = order0.getOrderItem();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      order0.setName("4O^a^");
      String string0 = order0.getName();
      assertEquals("4O^a^", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Order order0 = new Order();
      order0.setName("");
      String string0 = order0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      String string0 = order0.getDepositNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      order0.setContactNumber("4O^a^");
      String string0 = order0.getContactNumber();
      assertEquals("4O^a^", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      String string0 = order0.getContactNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Order order0 = new Order();
      order0.setAddress("MAOLlI^");
      String string0 = order0.getAddress();
      assertEquals("MAOLlI^", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Order order0 = new Order("", "", "", "", "");
      String string0 = order0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Order order0 = new Order();
      String string0 = order0.getDepositNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Order order0 = new Order();
      order0.setDepositNumber("Nwi(Z@<PN.+P");
      String string0 = order0.getDepositNumber();
      assertEquals("Nwi(Z@<PN.+P", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Order order0 = new Order();
      String string0 = order0.getContactNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Order order0 = new Order();
      String string0 = order0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Order order0 = new Order();
      String string0 = order0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Order order0 = new Order("8k:R92vs0ili|[Bt=q", (String) null, "J", "8k:R92vs0ili|[Bt=q", (String) null);
      order0.setOrderItem("8k:R92vs0ili|[Bt=q");
      assertEquals("8k:R92vs0ili|[Bt=q", order0.getName());
      assertEquals("J", order0.getAddress());
      assertEquals("8k:R92vs0ili|[Bt=q", order0.getDepositNumber());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Order order0 = new Order();
      String string0 = order0.getOrderItem();
      assertNull(string0);
  }
}
