/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:21:50 GMT 2021
 */

package com.iluwatar.intercepting.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.intercepting.filter.AddressFilter;
import com.iluwatar.intercepting.filter.ContactFilter;
import com.iluwatar.intercepting.filter.DepositFilter;
import com.iluwatar.intercepting.filter.Filter;
import com.iluwatar.intercepting.filter.NameFilter;
import com.iluwatar.intercepting.filter.Order;
import com.iluwatar.intercepting.filter.OrderFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractFilter_ESTest extends AbstractFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DepositFilter depositFilter0 = new DepositFilter();
      NameFilter nameFilter0 = new NameFilter();
      depositFilter0.setNext(nameFilter0);
      Filter filter0 = depositFilter0.getNext();
      assertSame(filter0, nameFilter0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NameFilter nameFilter0 = new NameFilter();
      Order order0 = new Order();
      String string0 = nameFilter0.execute(order0);
      assertEquals("Invalid name! ", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AddressFilter addressFilter0 = new AddressFilter();
      OrderFilter orderFilter0 = new OrderFilter();
      orderFilter0.setNext(addressFilter0);
      addressFilter0.setNext(orderFilter0);
      // Undeclared exception!
      orderFilter0.getLast();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DepositFilter depositFilter0 = new DepositFilter();
      Filter filter0 = depositFilter0.getNext();
      assertNull(filter0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ContactFilter contactFilter0 = new ContactFilter();
      Order order0 = new Order((String) null, ".*[^w|s]+.*", (String) null, "com.iluwatar.intercepting.filter.Order", "");
      AddressFilter addressFilter0 = new AddressFilter();
      addressFilter0.setNext(contactFilter0);
      String string0 = addressFilter0.execute(order0);
      assertEquals("Invalid contact number! Invalid address! ", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NameFilter nameFilter0 = new NameFilter();
      DepositFilter depositFilter0 = new DepositFilter();
      nameFilter0.setNext(depositFilter0);
      Filter filter0 = nameFilter0.getLast();
      assertSame(filter0, depositFilter0);
  }
}
