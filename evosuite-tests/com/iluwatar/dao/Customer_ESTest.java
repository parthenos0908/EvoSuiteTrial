/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 04:10:09 GMT 2021
 */

package com.iluwatar.dao;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.dao.Customer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Customer_ESTest extends Customer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Customer customer0 = new Customer(956, "", "");
      customer0.setId(0);
      Customer customer1 = new Customer(956, "", "Hc7h7mzpHXB1&NQ[");
      boolean boolean0 = customer0.equals(customer1);
      assertEquals("Customer{id=0, firstName='', lastName=''}", customer0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Customer customer0 = new Customer(0, "k{K", (String) null);
      customer0.getLastName();
      assertEquals("Customer{id=0, firstName='k{K', lastName='null'}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      customer0.setLastName(">\"razr$\"yO");
      customer0.getLastName();
      assertEquals("Customer{id=-1913, firstName='', lastName='>\"razr$\"yO'}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Customer customer0 = new Customer(0, (String) null, (String) null);
      int int0 = customer0.getId();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      customer0.setId(1976);
      int int0 = customer0.getId();
      assertEquals(1976, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Customer customer0 = new Customer(0, "k{K", (String) null);
      assertEquals("Customer{id=0, firstName='k{K', lastName='null'}", customer0.toString());
      
      customer0.setFirstName((String) null);
      customer0.getFirstName();
      assertEquals("Customer{id=0, firstName='null', lastName='null'}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Customer customer0 = new Customer((-1), ">?/3mPMZt^Ck$.", (String) null);
      customer0.getFirstName();
      assertEquals("Customer{id=-1, firstName='>?/3mPMZt^Ck$.', lastName='null'}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      customer0.getLastName();
      assertEquals("Customer{id=-1913, firstName='', lastName=''}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      customer0.getFirstName();
      assertEquals("Customer{id=-1913, firstName='', lastName=''}", customer0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      int int0 = customer0.getId();
      assertEquals((-1913), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      Customer customer1 = new Customer((-1913), ";hOh~od 2", ";hOh~od 2");
      customer0.setId(1976);
      boolean boolean0 = customer0.equals(customer1);
      assertEquals("Customer{id=1976, firstName='', lastName=''}", customer0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      boolean boolean0 = customer0.equals(">\"razr$\"yO");
      assertEquals((-1913), customer0.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Customer customer0 = new Customer((-586), "", (String) null);
      boolean boolean0 = customer0.equals((Object) null);
      assertEquals("Customer{id=-586, firstName='', lastName='null'}", customer0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Customer customer0 = new Customer((-3247), "com.iluwatar.dao.Customer", "com.iluwatar.dao.Customer");
      boolean boolean0 = customer0.equals(customer0);
      assertTrue(boolean0);
      assertEquals((-3247), customer0.getId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Customer customer0 = new Customer(956, "", "");
      Customer customer1 = new Customer(956, "", "Hc7h7mzpHXB1&NQ[");
      boolean boolean0 = customer0.equals(customer1);
      assertTrue(boolean0);
      assertEquals("Customer{id=956, firstName='', lastName='Hc7h7mzpHXB1&NQ['}", customer1.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Customer customer0 = new Customer(956, "", "");
      String string0 = customer0.toString();
      assertEquals("Customer{id=956, firstName='', lastName=''}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Customer customer0 = new Customer((-1913), "", "");
      customer0.hashCode();
      assertEquals("Customer{id=-1913, firstName='', lastName=''}", customer0.toString());
  }
}
