/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:14:59 GMT 2021
 */

package com.iluwatar.chain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.chain.Request;
import com.iluwatar.chain.RequestType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Request_ESTest extends Request_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RequestType requestType0 = RequestType.COLLECT_TAX;
      Request request0 = new Request(requestType0, "DEFEND_CASTLE");
      String string0 = request0.toString();
      assertEquals("DEFEND_CASTLE", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RequestType requestType0 = RequestType.COLLECT_TAX;
      Request request0 = new Request(requestType0, "DEFEND_CASTLE");
      String string0 = request0.getRequestDescription();
      assertEquals("DEFEND_CASTLE", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = null;
      try {
        request0 = new Request(requestType0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = new Request(requestType0, "");
      String string0 = request0.getRequestDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = new Request(requestType0, "");
      boolean boolean0 = request0.isHandled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = new Request(requestType0, "");
      RequestType requestType1 = request0.getRequestType();
      assertSame(requestType0, requestType1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = new Request(requestType0, "");
      String string0 = request0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RequestType requestType0 = RequestType.TORTURE_PRISONER;
      Request request0 = new Request(requestType0, "");
      request0.markHandled();
      boolean boolean0 = request0.isHandled();
      assertTrue(boolean0);
  }
}
