/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:52:35 GMT 2021
 */

package com.iluwatar.twin;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.twin.BallItem;
import com.iluwatar.twin.BallThread;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BallThread_ESTest extends BallThread_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BallThread ballThread0 = new BallThread();
      // Undeclared exception!
      try { 
        ballThread0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.twin.BallItem.draw()\" because \"this.twin\" is null
         //
         verifyException("com.iluwatar.twin.BallThread", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BallThread ballThread0 = new BallThread();
      BallItem ballItem0 = new BallItem();
      ballThread0.setTwin(ballItem0);
      //  // Unstable assertion: assertFalse(ballThread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BallThread ballThread0 = new BallThread();
      ballThread0.resumeMe();
      assertFalse(ballThread0.isInterrupted());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BallThread ballThread0 = new BallThread();
      ballThread0.stopMe();
      ballThread0.run();
      //  // Unstable assertion: assertFalse(ballThread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BallThread ballThread0 = new BallThread();
      ballThread0.suspendMe();
      assertFalse(ballThread0.isInterrupted());
  }
}
