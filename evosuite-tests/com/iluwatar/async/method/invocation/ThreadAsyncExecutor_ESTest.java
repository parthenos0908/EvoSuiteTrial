/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 02:44:25 GMT 2021
 */

package com.iluwatar.async.method.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.async.method.invocation.AsyncCallback;
import com.iluwatar.async.method.invocation.AsyncResult;
import com.iluwatar.async.method.invocation.ThreadAsyncExecutor;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThreadAsyncExecutor_ESTest extends ThreadAsyncExecutor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThreadAsyncExecutor threadAsyncExecutor0 = new ThreadAsyncExecutor();
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      AsyncResult<Integer> asyncResult0 = threadAsyncExecutor0.startProcess(callable0);
      Integer integer0 = threadAsyncExecutor0.endProcess(asyncResult0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThreadAsyncExecutor threadAsyncExecutor0 = new ThreadAsyncExecutor();
      // Undeclared exception!
      try { 
        threadAsyncExecutor0.endProcess((AsyncResult<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.async.method.invocation.AsyncResult.isCompleted()\" because \"asyncResult\" is null
         //
         verifyException("com.iluwatar.async.method.invocation.ThreadAsyncExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThreadAsyncExecutor threadAsyncExecutor0 = new ThreadAsyncExecutor();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn(threadAsyncExecutor0).when(callable0).call();
      AsyncResult<Object> asyncResult0 = threadAsyncExecutor0.startProcess(callable0);
      AsyncCallback<Object> asyncCallback0 = (AsyncCallback<Object>) mock(AsyncCallback.class, new ViolatedAssumptionAnswer());
      Object object0 = threadAsyncExecutor0.endProcess(asyncResult0);
      assertSame(object0, threadAsyncExecutor0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThreadAsyncExecutor threadAsyncExecutor0 = new ThreadAsyncExecutor();
      AsyncCallback<Object> asyncCallback0 = (AsyncCallback<Object>) mock(AsyncCallback.class, new ViolatedAssumptionAnswer());
      AsyncResult<Object> asyncResult0 = threadAsyncExecutor0.startProcess((Callable<Object>) null, asyncCallback0);
      assertFalse(asyncResult0.isCompleted());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThreadAsyncExecutor threadAsyncExecutor0 = new ThreadAsyncExecutor();
      AsyncResult<Integer> asyncResult0 = threadAsyncExecutor0.startProcess((Callable<Integer>) null);
      try { 
        threadAsyncExecutor0.endProcess(asyncResult0);
        fail("Expecting exception: ExecutionException");
      
      } catch(ExecutionException e) {
         //
         // java.lang.NullPointerException: Cannot invoke \"java.util.concurrent.Callable.call()\" because \"task\" is null
         //
         verifyException("com.iluwatar.async.method.invocation.ThreadAsyncExecutor$CompletableResult", e);
      }
  }
}
