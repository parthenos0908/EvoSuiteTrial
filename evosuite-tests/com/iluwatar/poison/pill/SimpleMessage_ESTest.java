/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 10:36:18 GMT 2021
 */

package com.iluwatar.poison.pill;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.poison.pill.Message;
import com.iluwatar.poison.pill.SimpleMessage;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleMessage_ESTest extends SimpleMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      Message.Headers message_Headers0 = Message.Headers.SENDER;
      simpleMessage0.addHeader(message_Headers0, "e1EAHE+(+");
      String string0 = simpleMessage0.getHeader(message_Headers0);
      assertEquals("e1EAHE+(+", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      simpleMessage0.setBody("e1EAHE+(+");
      String string0 = simpleMessage0.getBody();
      assertEquals("e1EAHE+(+", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      simpleMessage0.setBody("");
      String string0 = simpleMessage0.getBody();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      Map<Message.Headers, String> map0 = simpleMessage0.getHeaders();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      String string0 = simpleMessage0.getBody();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      Message.Headers message_Headers0 = Message.Headers.SENDER;
      String string0 = simpleMessage0.getHeader(message_Headers0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpleMessage simpleMessage0 = new SimpleMessage();
      Message.Headers message_Headers0 = Message.Headers.SENDER;
      simpleMessage0.addHeader(message_Headers0, "");
      String string0 = simpleMessage0.getHeader(message_Headers0);
      assertEquals("", string0);
  }
}
