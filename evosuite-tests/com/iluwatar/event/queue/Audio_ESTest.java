/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 05:05:41 GMT 2021
 */

package com.iluwatar.event.queue;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.event.queue.Audio;
import com.iluwatar.event.queue.PlayMessage;
import java.io.FileNotFoundException;
import java.io.InputStream;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Audio_ESTest extends Audio_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Audio audio0 = Audio.getInstance();
      // Undeclared exception!
      try { 
        audio0.init();
       //  fail("Expecting exception: IllegalThreadStateException");
       // Unstable assertion
      } catch(IllegalThreadStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Thread", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Audio audio0 = new Audio();
      try { 
        audio0.getAudioStream("$");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // C:\\Users\\disto\\gitrepos\\EvoSuiteTrial\\$ (\u6307\u5B9A\u3055\u308C\u305F\u30D5\u30A1\u30A4\u30EB\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Audio audio0 = new Audio();
      audio0.playSound((AudioInputStream) null, 1896.8F);
      audio0.playSound((AudioInputStream) null, 1896.8F);
      assertTrue(audio0.isServiceRunning());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Audio audio0 = new Audio();
      AudioFormat audioFormat0 = new AudioFormat(1827.129F, 1, 0, false, false);
      AudioInputStream audioInputStream0 = new AudioInputStream((InputStream) null, audioFormat0, 0);
      audio0.playSound(audioInputStream0, 0);
      audio0.playSound((AudioInputStream) null, (-1.0F));
      assertTrue(audio0.isServiceRunning());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Audio audio0 = new Audio();
      audio0.init();
      audio0.init();
      assertTrue(audio0.isServiceRunning());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Audio audio0 = Audio.getInstance();
      boolean boolean0 = audio0.isServiceRunning();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Audio audio0 = new Audio();
      audio0.init();
      boolean boolean0 = audio0.isServiceRunning();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Audio audio0 = new Audio();
      boolean boolean0 = audio0.isServiceRunning();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Audio audio0 = new Audio();
      audio0.init();
      audio0.stopService();
      assertFalse(audio0.isServiceRunning());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Audio audio0 = new Audio();
      // Undeclared exception!
      try { 
        audio0.stopService();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"java.lang.Thread.join()\" because \"this.updateThread\" is null
         //
         verifyException("com.iluwatar.event.queue.Audio", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Audio audio0 = Audio.getInstance();
      // Undeclared exception!
      try { 
        audio0.getAudioStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Audio audio0 = Audio.getInstance();
      PlayMessage[] playMessageArray0 = audio0.getPendingAudio();
      assertEquals(16, playMessageArray0.length);
  }
}
