/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 05:09:55 GMT 2021
 */

package com.iluwatar.event.sourcing.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.event.sourcing.event.MoneyTransferEvent;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MoneyTransferEvent_ESTest extends MoneyTransferEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent((-1132L), (-1132L), (BigDecimal) null, 2881, 1);
      moneyTransferEvent0.getMoney();
      assertEquals(2881, moneyTransferEvent0.getAccountNoFrom());
      assertEquals(1, moneyTransferEvent0.getAccountNoTo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0, 0, bigDecimal0, 0, 0);
      moneyTransferEvent0.getMoney();
      assertEquals(0, moneyTransferEvent0.getAccountNoFrom());
      assertEquals(0, moneyTransferEvent0.getAccountNoTo());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(1L, (-1L), bigDecimal0, (-349), 929);
      moneyTransferEvent0.getMoney();
      assertEquals((-349), moneyTransferEvent0.getAccountNoFrom());
      assertEquals(929, moneyTransferEvent0.getAccountNoTo());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0L, 0L, bigDecimal0, 0, 0);
      int int0 = moneyTransferEvent0.getAccountNoTo();
      assertEquals(0, int0);
      assertEquals(0, moneyTransferEvent0.getAccountNoFrom());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-2904L));
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent((-1L), (-1L), bigDecimal0, 2291, 2291);
      int int0 = moneyTransferEvent0.getAccountNoTo();
      assertEquals(2291, moneyTransferEvent0.getAccountNoFrom());
      assertEquals(2291, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0, 0, bigDecimal0, 0, 0);
      int int0 = moneyTransferEvent0.getAccountNoFrom();
      assertEquals(0, moneyTransferEvent0.getAccountNoTo());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent((-1132L), (-1132L), (BigDecimal) null, 2881, 1);
      int int0 = moneyTransferEvent0.getAccountNoFrom();
      assertEquals(1, moneyTransferEvent0.getAccountNoTo());
      assertEquals(2881, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-2904L));
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent((-1L), (-1L), bigDecimal0, 2291, 2291);
      moneyTransferEvent0.getMoney();
      assertEquals(2291, moneyTransferEvent0.getAccountNoFrom());
      assertEquals(2291, moneyTransferEvent0.getAccountNoTo());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0, 0, bigDecimal0, 0, 0);
      // Undeclared exception!
      try { 
        moneyTransferEvent0.process();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Account not found 0
         //
         verifyException("com.iluwatar.event.sourcing.event.MoneyTransferEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0, 462L, bigDecimal0, (-1334), (-1334));
      int int0 = moneyTransferEvent0.getAccountNoFrom();
      assertEquals((-1334), int0);
      assertEquals((-1334), moneyTransferEvent0.getAccountNoTo());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      MoneyTransferEvent moneyTransferEvent0 = new MoneyTransferEvent(0, 462L, bigDecimal0, (-1334), (-1334));
      int int0 = moneyTransferEvent0.getAccountNoTo();
      assertEquals((-1334), moneyTransferEvent0.getAccountNoFrom());
      assertEquals((-1334), int0);
  }
}
