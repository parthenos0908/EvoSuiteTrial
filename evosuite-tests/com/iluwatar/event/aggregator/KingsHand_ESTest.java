/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 04:55:29 GMT 2021
 */

package com.iluwatar.event.aggregator;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.event.aggregator.Event;
import com.iluwatar.event.aggregator.KingJoffrey;
import com.iluwatar.event.aggregator.KingsHand;
import com.iluwatar.event.aggregator.Weekday;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KingsHand_ESTest extends KingsHand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KingsHand kingsHand0 = new KingsHand();
      Weekday weekday0 = Weekday.FRIDAY;
      Event event0 = Event.TRAITOR_DETECTED;
      kingsHand0.notifyObservers(event0);
      KingJoffrey kingJoffrey0 = new KingJoffrey();
      Event event1 = Event.STARK_SIGHTED;
      kingJoffrey0.onEvent(event1);
      kingsHand0.registerObserver(kingJoffrey0);
      kingsHand0.timePasses(weekday0);
      Event event2 = Event.TRAITOR_DETECTED;
      kingsHand0.onEvent(event2);
      kingsHand0.onEvent(event2);
      Weekday weekday1 = Weekday.SUNDAY;
      Event event3 = Event.STARK_SIGHTED;
      Event event4 = Event.WARSHIPS_APPROACHING;
      kingsHand0.onEvent(event4);
      kingsHand0.onEvent(event3);
      kingsHand0.timePasses(weekday1);
      Weekday weekday2 = Weekday.MONDAY;
      kingsHand0.timePasses(weekday2);
      Weekday weekday3 = Weekday.THURSDAY;
      kingsHand0.timePasses(weekday3);
      Event event5 = Event.WARSHIPS_APPROACHING;
      kingsHand0.onEvent(event5);
      kingsHand0.onEvent(event2);
      kingsHand0.timePasses(weekday0);
      kingsHand0.onEvent(event3);
      Weekday weekday4 = Weekday.WEDNESDAY;
      kingsHand0.timePasses(weekday4);
      kingsHand0.notifyObservers(event1);
      kingsHand0.timePasses(weekday3);
      kingsHand0.timePasses(weekday0);
      Weekday weekday5 = Weekday.SUNDAY;
      kingsHand0.timePasses(weekday5);
      assertFalse(weekday5.equals((Object)weekday4));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KingsHand kingsHand0 = new KingsHand();
      Weekday weekday0 = Weekday.SATURDAY;
      kingsHand0.timePasses(weekday0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KingJoffrey kingJoffrey0 = new KingJoffrey();
      KingsHand kingsHand0 = new KingsHand(kingJoffrey0);
      Event event0 = Event.TRAITOR_DETECTED;
      kingsHand0.onEvent(event0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KingsHand kingsHand0 = new KingsHand();
      KingsHand kingsHand1 = new KingsHand(kingsHand0);
      Weekday weekday0 = Weekday.SUNDAY;
      kingsHand1.timePasses(weekday0);
      assertFalse(kingsHand1.equals((Object)kingsHand0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KingJoffrey kingJoffrey0 = new KingJoffrey();
      Event event0 = Event.WARSHIPS_APPROACHING;
      kingJoffrey0.onEvent(event0);
      Event event1 = Event.STARK_SIGHTED;
      kingJoffrey0.onEvent(event1);
      Event event2 = Event.STARK_SIGHTED;
      kingJoffrey0.onEvent(event2);
      KingsHand kingsHand0 = new KingsHand(kingJoffrey0);
      kingsHand0.notifyObservers(event2);
      kingsHand0.onEvent(event2);
      kingsHand0.onEvent(event2);
      Weekday weekday0 = Weekday.SUNDAY;
      kingsHand0.timePasses(weekday0);
      kingsHand0.timePasses(weekday0);
      kingsHand0.timePasses(weekday0);
      Weekday weekday1 = Weekday.THURSDAY;
      kingsHand0.timePasses(weekday1);
      kingsHand0.timePasses(weekday0);
      kingsHand0.timePasses(weekday0);
      Event event3 = Event.STARK_SIGHTED;
      kingJoffrey0.onEvent(event3);
      kingsHand0.onEvent(event0);
      kingsHand0.timePasses(weekday0);
      assertFalse(weekday0.equals((Object)weekday1));
  }
}
