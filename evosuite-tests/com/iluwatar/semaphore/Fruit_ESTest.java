/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:22:58 GMT 2021
 */

package com.iluwatar.semaphore;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.semaphore.Fruit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Fruit_ESTest extends Fruit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Fruit fruit0 = new Fruit((Fruit.FruitType) null);
      fruit0.getType();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Fruit fruit0 = new Fruit((Fruit.FruitType) null);
      // Undeclared exception!
      try { 
        fruit0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.semaphore.Fruit$FruitType.ordinal()\" because \"this.type\" is null
         //
         verifyException("com.iluwatar.semaphore.Fruit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Fruit.FruitType fruit_FruitType0 = Fruit.FruitType.LEMON;
      Fruit fruit0 = new Fruit(fruit_FruitType0);
      String string0 = fruit0.toString();
      assertEquals("Lemon", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Fruit.FruitType fruit_FruitType0 = Fruit.FruitType.ORANGE;
      Fruit fruit0 = new Fruit(fruit_FruitType0);
      String string0 = fruit0.toString();
      assertEquals("Orange", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Fruit.FruitType fruit_FruitType0 = Fruit.FruitType.ORANGE;
      Fruit fruit0 = new Fruit(fruit_FruitType0);
      Fruit.FruitType fruit_FruitType1 = fruit0.getType();
      assertSame(fruit_FruitType0, fruit_FruitType1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Fruit.FruitType fruit_FruitType0 = Fruit.FruitType.APPLE;
      Fruit fruit0 = new Fruit(fruit_FruitType0);
      String string0 = fruit0.toString();
      assertEquals("Apple", string0);
  }
}
