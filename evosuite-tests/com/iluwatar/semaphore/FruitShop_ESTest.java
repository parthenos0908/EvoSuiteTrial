/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 12:25:28 GMT 2021
 */

package com.iluwatar.semaphore;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.semaphore.FruitBowl;
import com.iluwatar.semaphore.FruitShop;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FruitShop_ESTest extends FruitShop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      FruitBowl fruitBowl0 = new FruitBowl();
      fruitShop0.returnBowl(fruitBowl0);
      assertEquals(300, fruitShop0.countFruit());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      FruitBowl fruitBowl0 = fruitShop0.takeBowl();
      FruitBowl fruitBowl1 = fruitShop0.takeBowl();
      assertEquals(100, fruitBowl1.countFruit());
      assertNotSame(fruitBowl1, fruitBowl0);
      
      FruitBowl fruitBowl2 = fruitShop0.takeBowl();
      assertNotNull(fruitBowl2);
      
      fruitShop0.returnBowl(fruitBowl2);
      assertEquals(100, fruitBowl2.countFruit());
      assertNotSame(fruitBowl2, fruitBowl1);
      assertNotSame(fruitBowl2, fruitBowl0);
      assertEquals(300, fruitShop0.countFruit());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      FruitBowl fruitBowl0 = fruitShop0.takeBowl();
      fruitShop0.returnBowl(fruitBowl0);
      assertEquals(100, fruitBowl0.countFruit());
      assertEquals(300, fruitShop0.countFruit());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      FruitBowl fruitBowl0 = fruitShop0.takeBowl();
      assertEquals(100, fruitBowl0.countFruit());
      
      FruitBowl fruitBowl1 = fruitShop0.takeBowl();
      fruitShop0.returnBowl(fruitBowl1);
      assertEquals(100, fruitBowl1.countFruit());
      assertNotSame(fruitBowl1, fruitBowl0);
      assertEquals(300, fruitShop0.countFruit());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      FruitBowl fruitBowl0 = fruitShop0.takeBowl();
      FruitBowl fruitBowl1 = fruitShop0.takeBowl();
      assertNotSame(fruitBowl1, fruitBowl0);
      assertEquals(100, fruitBowl1.countFruit());
      
      FruitBowl fruitBowl2 = fruitShop0.takeBowl();
      assertNotSame(fruitBowl2, fruitBowl0);
      assertEquals(100, fruitBowl2.countFruit());
      assertNotNull(fruitBowl2);
      assertNotSame(fruitBowl2, fruitBowl1);
      
      FruitBowl fruitBowl3 = fruitShop0.takeBowl();
      assertNull(fruitBowl3);
      assertEquals(300, fruitShop0.countFruit());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FruitShop fruitShop0 = new FruitShop();
      int int0 = fruitShop0.countFruit();
      assertEquals(300, int0);
  }
}
