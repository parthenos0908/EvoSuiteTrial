/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 02:47:28 GMT 2021
 */

package com.iluwatar.bridge;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.bridge.Enchantment;
import com.iluwatar.bridge.FlyingEnchantment;
import com.iluwatar.bridge.Hammer;
import com.iluwatar.bridge.SoulEatingEnchantment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Hammer_ESTest extends Hammer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SoulEatingEnchantment soulEatingEnchantment0 = new SoulEatingEnchantment();
      Hammer hammer0 = new Hammer(soulEatingEnchantment0);
      Enchantment enchantment0 = hammer0.getEnchantment();
      assertSame(enchantment0, soulEatingEnchantment0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Hammer hammer0 = new Hammer((Enchantment) null);
      // Undeclared exception!
      try { 
        hammer0.wield();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.bridge.Enchantment.onActivate()\" because \"this.enchantment\" is null
         //
         verifyException("com.iluwatar.bridge.Hammer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Hammer hammer0 = new Hammer((Enchantment) null);
      // Undeclared exception!
      try { 
        hammer0.unwield();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.bridge.Enchantment.onDeactivate()\" because \"this.enchantment\" is null
         //
         verifyException("com.iluwatar.bridge.Hammer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Hammer hammer0 = new Hammer((Enchantment) null);
      // Undeclared exception!
      try { 
        hammer0.swing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.bridge.Enchantment.apply()\" because \"this.enchantment\" is null
         //
         verifyException("com.iluwatar.bridge.Hammer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SoulEatingEnchantment soulEatingEnchantment0 = new SoulEatingEnchantment();
      Hammer hammer0 = new Hammer(soulEatingEnchantment0);
      hammer0.unwield();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SoulEatingEnchantment soulEatingEnchantment0 = new SoulEatingEnchantment();
      Hammer hammer0 = new Hammer(soulEatingEnchantment0);
      hammer0.wield();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FlyingEnchantment flyingEnchantment0 = new FlyingEnchantment();
      Hammer hammer0 = new Hammer(flyingEnchantment0);
      hammer0.swing();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Hammer hammer0 = new Hammer((Enchantment) null);
      Enchantment enchantment0 = hammer0.getEnchantment();
      assertNull(enchantment0);
  }
}
