/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 11:59:09 GMT 2021
 */

package com.iluwatar.roleobject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.roleobject.BorrowerRole;
import com.iluwatar.roleobject.Customer;
import com.iluwatar.roleobject.CustomerCore;
import com.iluwatar.roleobject.InvestorRole;
import com.iluwatar.roleobject.Role;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Customer_ESTest extends Customer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CustomerCore customerCore0 = new CustomerCore();
      Role role0 = Role.Borrower;
      boolean boolean0 = customerCore0.remRole(role0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Role[] roleArray0 = new Role[5];
      Role role0 = Role.Borrower;
      roleArray0[0] = role0;
      roleArray0[1] = role0;
      roleArray0[2] = role0;
      roleArray0[3] = roleArray0[0];
      roleArray0[4] = roleArray0[2];
      Customer customer0 = Customer.newCustomer(roleArray0);
      boolean boolean0 = customer0.hasRole(role0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CustomerCore customerCore0 = new CustomerCore();
      Role role0 = Role.Borrower;
      boolean boolean0 = customerCore0.hasRole(role0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BorrowerRole borrowerRole0 = new BorrowerRole();
      Role[] roleArray0 = new Role[2];
      Class<InvestorRole> class0 = InvestorRole.class;
      Optional<InvestorRole> optional0 = borrowerRole0.getRole(roleArray0[0], class0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BorrowerRole borrowerRole0 = new BorrowerRole();
      Role role0 = Role.Borrower;
      boolean boolean0 = borrowerRole0.addRole(role0);
      boolean boolean1 = borrowerRole0.remRole(role0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Role[] roleArray0 = new Role[1];
      // Undeclared exception!
      try { 
        Customer.newCustomer(roleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.roleobject.Role.instance()\" because \"role\" is null
         //
         verifyException("com.iluwatar.roleobject.CustomerCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CustomerCore customerCore0 = new CustomerCore();
      Role[] roleArray0 = new Role[3];
      // Undeclared exception!
      try { 
        customerCore0.addRole(roleArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.roleobject.Role.instance()\" because \"role\" is null
         //
         verifyException("com.iluwatar.roleobject.CustomerCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Customer customer0 = Customer.newCustomer();
      assertEquals("Customer{roles=[]}", customer0.toString());
  }
}
