/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 14:11:11 GMT 2021
 */

package com.iluwatar.visitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.visitor.CommanderVisitor;
import com.iluwatar.visitor.Sergeant;
import com.iluwatar.visitor.SergeantVisitor;
import com.iluwatar.visitor.Soldier;
import com.iluwatar.visitor.Unit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Soldier_ESTest extends Soldier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Unit[] unitArray0 = new Unit[0];
      Soldier soldier0 = new Soldier(unitArray0);
      CommanderVisitor commanderVisitor0 = new CommanderVisitor();
      soldier0.accept(commanderVisitor0);
      assertEquals("soldier", soldier0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Unit[] unitArray0 = new Unit[1];
      Sergeant sergeant0 = new Sergeant(unitArray0);
      unitArray0[0] = (Unit) sergeant0;
      Soldier soldier0 = new Soldier(unitArray0);
      SergeantVisitor sergeantVisitor0 = new SergeantVisitor();
      // Undeclared exception!
      try { 
        soldier0.accept(sergeantVisitor0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Unit[] unitArray0 = new Unit[0];
      Soldier soldier0 = new Soldier(unitArray0);
      String string0 = soldier0.toString();
      assertEquals("soldier", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Soldier soldier0 = new Soldier((Unit[]) null);
      CommanderVisitor commanderVisitor0 = new CommanderVisitor();
      // Undeclared exception!
      try { 
        soldier0.accept(commanderVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read the array length because \"array\" is null
         //
         verifyException("java.util.Arrays", e);
      }
  }
}
