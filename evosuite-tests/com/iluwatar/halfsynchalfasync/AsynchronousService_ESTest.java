/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 08:00:54 GMT 2021
 */

package com.iluwatar.halfsynchalfasync;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.halfsynchalfasync.AsyncTask;
import com.iluwatar.halfsynchalfasync.AsynchronousService;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.RejectedExecutionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AsynchronousService_ESTest extends AsynchronousService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      AsynchronousService asynchronousService0 = new AsynchronousService(linkedTransferQueue0);
      // Undeclared exception!
      try { 
        asynchronousService0.execute((AsyncTask<AsynchronousService>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.halfsynchalfasync.AsyncTask.onError(java.lang.Throwable)\" because \"task\" is null
         //
         verifyException("com.iluwatar.halfsynchalfasync.AsynchronousService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AsynchronousService asynchronousService0 = null;
      try {
        asynchronousService0 = new AsynchronousService((BlockingQueue<Runnable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      AsynchronousService asynchronousService0 = new AsynchronousService(priorityBlockingQueue0);
      asynchronousService0.close();
      AsyncTask<String> asyncTask0 = (AsyncTask<String>) mock(AsyncTask.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncTask0).toString();
      // Undeclared exception!
      try { 
        asynchronousService0.execute(asyncTask0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // Task java.util.concurrent.FutureTask@2b0b054[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@5ca307b6[Wrapped task = com.iluwatar.halfsynchalfasync.AsynchronousService$1@13340231[Not completed, task = null]]] rejected from java.util.concurrent.ThreadPoolExecutor@47bebb11[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor$AbortPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      AsynchronousService asynchronousService0 = new AsynchronousService(priorityBlockingQueue0);
      AsyncTask<String> asyncTask0 = (AsyncTask<String>) mock(AsyncTask.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(asyncTask0).call();
      asynchronousService0.execute(asyncTask0);
  }
}
