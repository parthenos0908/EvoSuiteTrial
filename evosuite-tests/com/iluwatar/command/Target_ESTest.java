/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:32:36 GMT 2021
 */

package com.iluwatar.command;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.command.Goblin;
import com.iluwatar.command.Size;
import com.iluwatar.command.Visibility;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Target_ESTest extends Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      String string0 = goblin0.toString();
      assertEquals("Goblin", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      goblin0.setSize((Size) null);
      goblin0.getSize();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      Visibility visibility0 = Visibility.INVISIBLE;
      goblin0.setVisibility(visibility0);
      goblin0.changeVisibility();
      assertEquals(Visibility.VISIBLE, goblin0.getVisibility());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      goblin0.changeVisibility();
      assertEquals(Visibility.INVISIBLE, goblin0.getVisibility());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      goblin0.changeSize();
      assertEquals(Size.SMALL, goblin0.getSize());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      goblin0.setSize((Size) null);
      goblin0.changeSize();
      assertEquals(Size.NORMAL, goblin0.getSize());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      goblin0.printStatus();
      assertEquals(Size.NORMAL, goblin0.getSize());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      Size size0 = goblin0.getSize();
      assertEquals(Size.NORMAL, size0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Goblin goblin0 = new Goblin();
      Visibility visibility0 = goblin0.getVisibility();
      assertEquals("visible", visibility0.toString());
  }
}
