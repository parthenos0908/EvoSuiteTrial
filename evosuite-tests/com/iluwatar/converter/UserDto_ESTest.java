/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 03:59:51 GMT 2021
 */

package com.iluwatar.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.converter.UserDto;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserDto_ESTest extends UserDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", true, "com.iluwatar.converter.UserDto");
      boolean boolean0 = userDto0.isActive();
      assertEquals("UserDto{firstName='', lastName='', isActive=true, email='com.iluwatar.converter.UserDto'}", userDto0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserDto userDto0 = new UserDto((String) null, (String) null, true, (String) null);
      userDto0.getLastName();
      assertTrue(userDto0.isActive());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserDto userDto0 = new UserDto("k|MJ>R7", "*", true, "");
      userDto0.getLastName();
      assertEquals("UserDto{firstName='k|MJ>R7', lastName='*', isActive=true, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserDto userDto0 = new UserDto((String) null, (String) null, true, (String) null);
      userDto0.getFirstName();
      assertEquals("UserDto{firstName='null', lastName='null', isActive=true, email='null'}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserDto userDto0 = new UserDto("`IT2'$30wX[a<", "", false, "");
      userDto0.getFirstName();
      assertEquals("UserDto{firstName='`IT2'$30wX[a<', lastName='', isActive=false, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserDto userDto0 = new UserDto((String) null, (String) null, true, (String) null);
      userDto0.getEmail();
      assertTrue(userDto0.isActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "zMX1AeQP:1");
      userDto0.getEmail();
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email='zMX1AeQP:1'}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      UserDto userDto1 = new UserDto("", "", false, "");
      boolean boolean0 = userDto0.equals(userDto1);
      assertTrue(boolean0);
      assertFalse(userDto1.isActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserDto userDto0 = new UserDto((String) null, (String) null, true, (String) null);
      UserDto userDto1 = new UserDto((String) null, "cQyX(", true, "");
      boolean boolean0 = userDto0.equals(userDto1);
      assertFalse(boolean0);
      assertEquals("UserDto{firstName='null', lastName='cQyX(', isActive=true, email=''}", userDto1.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      UserDto userDto1 = new UserDto("`IT2'$30wX[a<", "", false, "");
      boolean boolean0 = userDto0.equals(userDto1);
      assertFalse(boolean0);
      assertEquals("UserDto{firstName='`IT2'$30wX[a<', lastName='', isActive=false, email=''}", userDto1.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserDto userDto0 = new UserDto((String) null, (String) null, true, (String) null);
      UserDto userDto1 = new UserDto("", "~~+J3k", false, "");
      boolean boolean0 = userDto0.equals(userDto1);
      assertEquals("UserDto{firstName='', lastName='~~+J3k', isActive=false, email=''}", userDto1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      Object object0 = new Object();
      boolean boolean0 = userDto0.equals(object0);
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email=''}", userDto0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      boolean boolean0 = userDto0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserDto userDto0 = new UserDto("com.iluwatar.converter.UserDto", "com.iluwatar.converter.UserDto", false, "com.iluwatar.converter.UserDto");
      boolean boolean0 = userDto0.equals(userDto0);
      assertFalse(userDto0.isActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      UserDto userDto1 = new UserDto("", "", false, "zMX1AeQP:1");
      boolean boolean0 = userDto1.equals(userDto0);
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email='zMX1AeQP:1'}", userDto1.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "com.iluwatar.converter.UserDto", false, "");
      boolean boolean0 = userDto0.isActive();
      assertEquals("UserDto{firstName='', lastName='com.iluwatar.converter.UserDto', isActive=false, email=''}", userDto0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      userDto0.getLastName();
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      userDto0.getFirstName();
      assertFalse(userDto0.isActive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      userDto0.getEmail();
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserDto userDto0 = new UserDto("", "", false, "");
      userDto0.hashCode();
      assertEquals("UserDto{firstName='', lastName='', isActive=false, email=''}", userDto0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserDto userDto0 = new UserDto("3I<T_CgM[", "3I<T_CgM[", false, "3I<T_CgM[");
      String string0 = userDto0.toString();
      assertEquals("UserDto{firstName='3I<T_CgM[', lastName='3I<T_CgM[', isActive=false, email='3I<T_CgM['}", string0);
  }
}
