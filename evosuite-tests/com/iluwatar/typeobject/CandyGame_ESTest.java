/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 13:55:12 GMT 2021
 */

package com.iluwatar.typeobject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.typeobject.Candy;
import com.iluwatar.typeobject.CandyGame;
import com.iluwatar.typeobject.Cell;
import com.iluwatar.typeobject.CellPool;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CandyGame_ESTest extends CandyGame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Candy.Type candy_Type0 = Candy.Type.REWARD_FRUIT;
      Candy candy0 = new Candy("3=!8OE%'@UM", (String) null, candy_Type0, 0);
      Cell cell0 = new Cell(candy0, 0, 0);
      Cell[][] cellArray0 = new Cell[1][4];
      Cell[] cellArray1 = new Cell[2];
      cellArray1[0] = cell0;
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      candyGame0.totalPoints = 1416;
      // Undeclared exception!
      try { 
        candyGame0.round(26, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.typeobject.CellPool.addNewCell(com.iluwatar.typeobject.Cell)\" because \"pool\" is null
         //
         verifyException("com.iluwatar.typeobject.Cell", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      candyGame0.round(0, 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      System.setCurrentTimeMillis(0);
      candyGame0.round(0, 1804);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Candy.Type candy_Type0 = Candy.Type.CRUSHABLE_CANDY;
      Candy candy0 = new Candy("com.iluwatar.typeobject.CandyGame", (String) null, candy_Type0, (-387));
      Cell cell0 = new Cell(candy0, (-84), (-476));
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[2][3];
      Cell[] cellArray1 = new Cell[9];
      cellArray1[0] = cell0;
      cellArray1[1] = cell0;
      cellArray0[0] = cellArray1;
      candyGame0.totalPoints = (-387);
      cellArray0[1] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.round((-476), 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.typeobject.CellPool.addNewCell(com.iluwatar.typeobject.Cell)\" because \"pool\" is null
         //
         verifyException("com.iluwatar.typeobject.Cell", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[4][4];
      candyGame0.cells = cellArray0;
      List<Cell> list0 = candyGame0.adjacentCells(2, 2);
      assertEquals(4, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[3][9];
      candyGame0.cells = cellArray0;
      List<Cell> list0 = candyGame0.adjacentCells(1, 0);
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[2][9];
      candyGame0.cells = cellArray0;
      List<Cell> list0 = candyGame0.adjacentCells(1, 0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[2][9];
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.adjacentCells(1, (-2145635554));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2145635554 out of bounds for length 9
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[3][4];
      candyGame0.cells = cellArray0;
      List<Cell> list0 = candyGame0.adjacentCells(0, 2);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[4][4];
      Cell[] cellArray1 = new Cell[4];
      Candy.Type candy_Type0 = Candy.Type.CRUSHABLE_CANDY;
      Candy candy0 = new Candy("src", (String) null, candy_Type0, 0);
      Cell cell0 = new Cell(candy0, 0, 0);
      cellArray1[0] = cell0;
      cellArray1[1] = cellArray1[0];
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.printGameStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read field \"candy\" because \"cell[...]\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Candy.Type candy_Type0 = Candy.Type.REWARD_FRUIT;
      Candy candy0 = new Candy("com.iluwatar.typeobject.CandyGame", "com.iluwatar.typeobject.CandyGame", candy_Type0, 0);
      Cell cell0 = new Cell(candy0, 0, 0);
      Cell[][] cellArray0 = new Cell[1][4];
      Cell[] cellArray1 = new Cell[6];
      cellArray1[0] = cell0;
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      candyGame0.printGameStatus();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = CandyGame.numOfSpaces(1721);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Candy.Type candy_Type0 = Candy.Type.CRUSHABLE_CANDY;
      Cell cell0 = new Cell();
      Cell[][] cellArray0 = new Cell[1][4];
      Cell[] cellArray1 = new Cell[20];
      candyGame0.cells = cellArray0;
      Candy candy0 = new Candy("s!8D'5a&{\"lvptSi/x", "s!8D'5a&{\"lvptSi/x", candy_Type0, 0);
      cell0.candy = candy0;
      cellArray1[0] = cell0;
      cellArray0[0] = cellArray1;
      // Undeclared exception!
      try { 
        candyGame0.round((-1879048202), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[1][7];
      Cell[] cellArray1 = new Cell[0];
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.printGameStatus();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[3][4];
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.handleChange(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read field \"candy\" because \"cell[...]\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[4][2];
      Cell[] cellArray1 = new Cell[0];
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.handleChange(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      candyGame0.cells = null;
      // Undeclared exception!
      try { 
        candyGame0.continueRound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read the array length because \"this.cells\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[1][6];
      Cell[] cellArray1 = new Cell[0];
      cellArray0[0] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.continueRound();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      candyGame0.cells = null;
      // Undeclared exception!
      try { 
        candyGame0.adjacentCells(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot load from object array because \"this.cells\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CandyGame candyGame0 = null;
      try {
        candyGame0 = new CandyGame((-4207), (CellPool) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -4207
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Candy.Type candy_Type0 = Candy.Type.REWARD_FRUIT;
      Candy candy0 = new Candy("com.iluwatar.typeobject.CandyGame", "com.iluwatar.typeobject.CandyGame", candy_Type0, (-387));
      Cell cell0 = new Cell(candy0, (-81), 0);
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[2][3];
      Cell[] cellArray1 = new Cell[9];
      cellArray1[0] = cell0;
      cellArray0[1] = cellArray1;
      candyGame0.cells = cellArray0;
      // Undeclared exception!
      try { 
        candyGame0.round(0, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.typeobject.CellPool.addNewCell(com.iluwatar.typeobject.Cell)\" because \"pool\" is null
         //
         verifyException("com.iluwatar.typeobject.Cell", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      candyGame0.round(2, 1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      boolean boolean0 = candyGame0.continueRound();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Cell[][] cellArray0 = new Cell[7][4];
      Candy.Type candy_Type0 = Candy.Type.REWARD_FRUIT;
      Candy candy0 = new Candy("!kH*QBv:}PrNfg<u", "!kH*QBv:}PrNfg<u", candy_Type0, 0);
      Cell cell0 = new Cell(candy0, 3, 0);
      Cell[] cellArray1 = new Cell[5];
      cellArray1[0] = cell0;
      cellArray0[6] = cellArray1;
      candyGame0.cells = cellArray0;
      boolean boolean0 = candyGame0.continueRound();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      List<Cell> list0 = candyGame0.adjacentCells(1050, 1050);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      // Undeclared exception!
      try { 
        candyGame0.adjacentCells(2095, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2095 out of bounds for length 0
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      // Undeclared exception!
      try { 
        candyGame0.adjacentCells((-1), 1445);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2 out of bounds for length 0
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      List<Cell> list0 = candyGame0.adjacentCells((-387), (-387));
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      Candy.Type candy_Type0 = Candy.Type.CRUSHABLE_CANDY;
      Cell cell0 = new Cell();
      Cell[][] cellArray0 = new Cell[7][4];
      Cell[] cellArray1 = new Cell[3];
      candyGame0.cells = cellArray0;
      Candy candy0 = new Candy("U!8j|D'5a&{\"lvptSi5x", "U!8j|D'5a&{\"lvptSi5x", candy_Type0, 0);
      cell0.candy = candy0;
      cellArray1[0] = cell0;
      cellArray0[0] = cellArray1;
      // Undeclared exception!
      try { 
        candyGame0.printGameStatus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot read field \"candy\" because \"cell[...]\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CandyGame candyGame0 = null;
      try {
        candyGame0 = new CandyGame(693, (CellPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot invoke \"com.iluwatar.typeobject.CellPool.getNewCell()\" because \"this.pool\" is null
         //
         verifyException("com.iluwatar.typeobject.CandyGame", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CandyGame candyGame0 = new CandyGame(0, (CellPool) null);
      candyGame0.handleChange(1050);
      boolean boolean0 = candyGame0.continueRound();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = CandyGame.numOfSpaces((-95));
      assertEquals("", string0);
  }
}
