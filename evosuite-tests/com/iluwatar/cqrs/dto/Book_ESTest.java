/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 04:06:43 GMT 2021
 */

package com.iluwatar.cqrs.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iluwatar.cqrs.dto.Book;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Book_ESTest extends Book_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Book book0 = new Book("^a_[E*&6", (-1.0));
      Book book1 = new Book("^a_[E*&6", (-2373.041));
      boolean boolean0 = book0.equals(book1);
      assertEquals((-2373.041), book1.getPrice(), 0.01);
      assertFalse(boolean0);
      assertFalse(book1.equals((Object)book0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Book book0 = new Book();
      String string0 = book0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Book book0 = new Book("", 0.0);
      book0.getTitle();
      assertEquals(0.0, book0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Book book0 = new Book();
      double double0 = book0.getPrice();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Book book0 = new Book("--EYeM_", 4307.4282);
      double double0 = book0.getPrice();
      assertEquals(4307.4282, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Book book0 = new Book();
      Book book1 = new Book();
      // Undeclared exception!
      try { 
        book0.equals(book1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Book book0 = new Book("t2^PGwxo", (-808.1857514199278));
      double double0 = book0.getPrice();
      assertEquals((-808.1857514199278), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Book book0 = new Book("t2^PGwxo", (-808.1857514199278));
      book0.getTitle();
      assertEquals("BookDTO [title=t2^PGwxo, price=-808.1857514199278]", book0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Book book0 = new Book("+gQzwG])", (-808.1857514199278));
      Book book1 = new Book("+gQzwG])", 3299.574479548);
      boolean boolean0 = book0.equals(book1);
      assertFalse(book1.equals((Object)book0));
      assertFalse(boolean0);
      assertEquals(3299.574479548, book1.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Book book0 = new Book("GA(q4f K", 1533.0140672820637);
      Book book1 = new Book();
      boolean boolean0 = book0.equals(book1);
      assertEquals(1533.0140672820637, book0.getPrice(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Book book0 = new Book("t2^PGwxo", (-808.1857514199278));
      boolean boolean0 = book0.equals("t2^PGwxo");
      assertEquals("BookDTO [title=t2^PGwxo, price=-808.1857514199278]", book0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Book book0 = new Book();
      boolean boolean0 = book0.equals(book0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Book book0 = new Book("3)*kerL`%aSU)0SAb", 1.0);
      book0.hashCode();
      assertEquals("BookDTO [title=3)*kerL`%aSU)0SAb, price=1.0]", book0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Book book0 = new Book("3)*kerL`%aSU)0SAb", 1.0);
      String string0 = book0.toString();
      assertEquals("BookDTO [title=3)*kerL`%aSU)0SAb, price=1.0]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Book book0 = new Book("", 1880.08051135);
      Book book1 = new Book("", 1880.08051135);
      boolean boolean0 = book0.equals(book1);
      assertTrue(boolean0);
      assertEquals("BookDTO [title=, price=1880.08051135]", book1.toString());
  }
}
