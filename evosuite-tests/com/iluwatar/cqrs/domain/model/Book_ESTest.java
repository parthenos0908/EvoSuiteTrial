/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 04:04:26 GMT 2021
 */

package com.iluwatar.cqrs.domain.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.iluwatar.cqrs.domain.model.Author;
import com.iluwatar.cqrs.domain.model.Book;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Book_ESTest extends Book_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Book book0 = new Book();
      String string0 = book0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      book0.setTitle("Book [title=, price=0.0, author=Author [name=, email=null]]");
      book0.getTitle();
      assertEquals(0.0, book0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      book0.setPrice(1.0);
      double double0 = book0.getPrice();
      assertEquals("Book [title=, price=1.0, author=Author [name=, email=null]]", book0.toString());
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Author author0 = new Author("U+d[}MqP&ApB `MR", "", "9'3N(vRZ;'q!`9m`Z8");
      Book book0 = new Book("", 0.0, author0);
      book0.setPrice((-1.0));
      double double0 = book0.getPrice();
      assertEquals("Book [title=, price=-1.0, author=Author [name=, email=9'3N(vRZ;'q!`9m`Z8]]", book0.toString());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Book book0 = new Book();
      book0.setId(1848L);
      long long0 = book0.getId();
      assertEquals(1848L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Author author0 = new Author("U+d[}MqP&ApB `MR", "", "9'3N(vRZ;'q!`9m`Z8");
      Book book0 = new Book("", 0.0, author0);
      book0.setId((-3298L));
      long long0 = book0.getId();
      assertEquals((-3298L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Book book0 = new Book();
      Author author0 = book0.getAuthor();
      assertNull(author0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      author0.setId(1007L);
      book0.getAuthor();
      assertEquals("Book [title=, price=0.0, author=Author [name=, email=null]]", book0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Book book0 = new Book();
      Author author0 = new Author();
      author0.setId((-1808L));
      book0.setAuthor(author0);
      Author author1 = book0.getAuthor();
      assertNull(author1.getUsername());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      String string0 = book0.toString();
      assertEquals("Book [title=, price=0.0, author=Author [name=, email=null]]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      book0.getAuthor();
      assertEquals(0.0, book0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      book0.getTitle();
      assertEquals(0.0, book0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Author author0 = new Author((String) null, "", (String) null);
      Book book0 = new Book("", 0.0, author0);
      double double0 = book0.getPrice();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Book book0 = new Book("l5M;:vg<*IeX", 1.0, (Author) null);
      book0.getId();
      assertEquals("Book [title=l5M;:vg<*IeX, price=1.0, author=null]", book0.toString());
  }
}
